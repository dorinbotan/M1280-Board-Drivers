
HWP_HandIn.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000732  000007c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000732  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800216  00800216  000007dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000080c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e0a  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c29  00000000  00000000  0000168e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c8  00000000  00000000  000022b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000012c  00000000  00000000  00002680  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d0  00000000  00000000  000027ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003a5  00000000  00000000  00002d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00003121  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8c c0       	rjmp	.+280    	; 0x11e <__bad_interrupt>
   6:	00 00       	nop
   8:	8a c0       	rjmp	.+276    	; 0x11e <__bad_interrupt>
   a:	00 00       	nop
   c:	88 c0       	rjmp	.+272    	; 0x11e <__bad_interrupt>
   e:	00 00       	nop
  10:	86 c0       	rjmp	.+268    	; 0x11e <__bad_interrupt>
  12:	00 00       	nop
  14:	84 c0       	rjmp	.+264    	; 0x11e <__bad_interrupt>
  16:	00 00       	nop
  18:	82 c0       	rjmp	.+260    	; 0x11e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	80 c0       	rjmp	.+256    	; 0x11e <__bad_interrupt>
  1e:	00 00       	nop
  20:	7e c0       	rjmp	.+252    	; 0x11e <__bad_interrupt>
  22:	00 00       	nop
  24:	7c c0       	rjmp	.+248    	; 0x11e <__bad_interrupt>
  26:	00 00       	nop
  28:	7a c0       	rjmp	.+244    	; 0x11e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	78 c0       	rjmp	.+240    	; 0x11e <__bad_interrupt>
  2e:	00 00       	nop
  30:	76 c0       	rjmp	.+236    	; 0x11e <__bad_interrupt>
  32:	00 00       	nop
  34:	74 c0       	rjmp	.+232    	; 0x11e <__bad_interrupt>
  36:	00 00       	nop
  38:	72 c0       	rjmp	.+228    	; 0x11e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	70 c0       	rjmp	.+224    	; 0x11e <__bad_interrupt>
  3e:	00 00       	nop
  40:	6e c0       	rjmp	.+220    	; 0x11e <__bad_interrupt>
  42:	00 00       	nop
  44:	6c c0       	rjmp	.+216    	; 0x11e <__bad_interrupt>
  46:	00 00       	nop
  48:	6a c0       	rjmp	.+212    	; 0x11e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	68 c0       	rjmp	.+208    	; 0x11e <__bad_interrupt>
  4e:	00 00       	nop
  50:	57 c1       	rjmp	.+686    	; 0x300 <__vector_20>
  52:	00 00       	nop
  54:	64 c0       	rjmp	.+200    	; 0x11e <__bad_interrupt>
  56:	00 00       	nop
  58:	62 c0       	rjmp	.+196    	; 0x11e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	61 c0       	rjmp	.+194    	; 0x120 <__vector_23>
  5e:	00 00       	nop
  60:	5e c0       	rjmp	.+188    	; 0x11e <__bad_interrupt>
  62:	00 00       	nop
  64:	5c c0       	rjmp	.+184    	; 0x11e <__bad_interrupt>
  66:	00 00       	nop
  68:	5a c0       	rjmp	.+180    	; 0x11e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	58 c0       	rjmp	.+176    	; 0x11e <__bad_interrupt>
  6e:	00 00       	nop
  70:	56 c0       	rjmp	.+172    	; 0x11e <__bad_interrupt>
  72:	00 00       	nop
  74:	54 c0       	rjmp	.+168    	; 0x11e <__bad_interrupt>
  76:	00 00       	nop
  78:	52 c0       	rjmp	.+164    	; 0x11e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	50 c0       	rjmp	.+160    	; 0x11e <__bad_interrupt>
  7e:	00 00       	nop
  80:	4e c0       	rjmp	.+156    	; 0x11e <__bad_interrupt>
  82:	00 00       	nop
  84:	4c c0       	rjmp	.+152    	; 0x11e <__bad_interrupt>
  86:	00 00       	nop
  88:	4a c0       	rjmp	.+148    	; 0x11e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	48 c0       	rjmp	.+144    	; 0x11e <__bad_interrupt>
  8e:	00 00       	nop
  90:	46 c0       	rjmp	.+140    	; 0x11e <__bad_interrupt>
  92:	00 00       	nop
  94:	44 c0       	rjmp	.+136    	; 0x11e <__bad_interrupt>
  96:	00 00       	nop
  98:	42 c0       	rjmp	.+132    	; 0x11e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	40 c0       	rjmp	.+128    	; 0x11e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3e c0       	rjmp	.+124    	; 0x11e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3c c0       	rjmp	.+120    	; 0x11e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3a c0       	rjmp	.+116    	; 0x11e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	38 c0       	rjmp	.+112    	; 0x11e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	36 c0       	rjmp	.+108    	; 0x11e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	34 c0       	rjmp	.+104    	; 0x11e <__bad_interrupt>
  b6:	00 00       	nop
  b8:	32 c0       	rjmp	.+100    	; 0x11e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	30 c0       	rjmp	.+96     	; 0x11e <__bad_interrupt>
  be:	00 00       	nop
  c0:	2e c0       	rjmp	.+92     	; 0x11e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2c c0       	rjmp	.+88     	; 0x11e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2a c0       	rjmp	.+84     	; 0x11e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	28 c0       	rjmp	.+80     	; 0x11e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	26 c0       	rjmp	.+76     	; 0x11e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	24 c0       	rjmp	.+72     	; 0x11e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	22 c0       	rjmp	.+68     	; 0x11e <__bad_interrupt>
  da:	00 00       	nop
  dc:	20 c0       	rjmp	.+64     	; 0x11e <__bad_interrupt>
  de:	00 00       	nop
  e0:	1e c0       	rjmp	.+60     	; 0x11e <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	12 e0       	ldi	r17, 0x02	; 2
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b2 e0       	ldi	r27, 0x02	; 2
  f6:	e2 e3       	ldi	r30, 0x32	; 50
  f8:	f7 e0       	ldi	r31, 0x07	; 7
  fa:	00 e0       	ldi	r16, 0x00	; 0
  fc:	0b bf       	out	0x3b, r16	; 59
  fe:	02 c0       	rjmp	.+4      	; 0x104 <__do_copy_data+0x14>
 100:	07 90       	elpm	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	a6 31       	cpi	r26, 0x16	; 22
 106:	b1 07       	cpc	r27, r17
 108:	d9 f7       	brne	.-10     	; 0x100 <__do_copy_data+0x10>

0000010a <__do_clear_bss>:
 10a:	22 e0       	ldi	r18, 0x02	; 2
 10c:	a6 e1       	ldi	r26, 0x16	; 22
 10e:	b2 e0       	ldi	r27, 0x02	; 2
 110:	01 c0       	rjmp	.+2      	; 0x114 <.do_clear_bss_start>

00000112 <.do_clear_bss_loop>:
 112:	1d 92       	st	X+, r1

00000114 <.do_clear_bss_start>:
 114:	ab 31       	cpi	r26, 0x1B	; 27
 116:	b2 07       	cpc	r27, r18
 118:	e1 f7       	brne	.-8      	; 0x112 <.do_clear_bss_loop>
 11a:	3d d1       	rcall	.+634    	; 0x396 <main>
 11c:	08 c3       	rjmp	.+1552   	; 0x72e <_exit>

0000011e <__bad_interrupt>:
 11e:	70 cf       	rjmp	.-288    	; 0x0 <__vectors>

00000120 <__vector_23>:

int8_t value_by_digits[4] = { -1, -1, -1, -1 };
uint8_t current = 0;

ISR(TIMER0_OVF_vect)
{
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	0b b6       	in	r0, 0x3b	; 59
 12c:	0f 92       	push	r0
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
 136:	af 93       	push	r26
 138:	bf 93       	push	r27
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
	TCNT0 = 136;
 13e:	88 e8       	ldi	r24, 0x88	; 136
 140:	86 bd       	out	0x26, r24	; 38

	uint8_t digit_value = value_by_digits[current];
 142:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <current>
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	e0 50       	subi	r30, 0x00	; 0
 14a:	fe 4f       	sbci	r31, 0xFE	; 254
 14c:	90 81       	ld	r25, Z
 14e:	88 e0       	ldi	r24, 0x08	; 8
	if(digit_value != -1) {
		for (uint8_t i = 0; i < 8; i++) {
			if (digit_value & 0x01)
 150:	90 ff       	sbrs	r25, 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <__vector_23+0x38>
				SET_BIT(PORTB, PB2);
 154:	2a 9a       	sbi	0x05, 2	; 5
 156:	01 c0       	rjmp	.+2      	; 0x15a <__vector_23+0x3a>
			else
				CLEAR_BIT(PORTB, PB2);
 158:	2a 98       	cbi	0x05, 2	; 5

			CLOCK_PIN(PORTB, PB1);
 15a:	29 9a       	sbi	0x05, 1	; 5
 15c:	29 98       	cbi	0x05, 1	; 5
			digit_value >>= 1;
 15e:	96 95       	lsr	r25
 160:	81 50       	subi	r24, 0x01	; 1
{
	TCNT0 = 136;

	uint8_t digit_value = value_by_digits[current];
	if(digit_value != -1) {
		for (uint8_t i = 0; i < 8; i++) {
 162:	b1 f7       	brne	.-20     	; 0x150 <__vector_23+0x30>

			CLOCK_PIN(PORTB, PB1);
			digit_value >>= 1;
		}

		PORTL &= ~0x0F;
 164:	ab e0       	ldi	r26, 0x0B	; 11
 166:	b1 e0       	ldi	r27, 0x01	; 1
 168:	8c 91       	ld	r24, X
 16a:	80 7f       	andi	r24, 0xF0	; 240
 16c:	8c 93       	st	X, r24
		CLOCK_PIN(PORTK, PK3);
 16e:	e8 e0       	ldi	r30, 0x08	; 8
 170:	f1 e0       	ldi	r31, 0x01	; 1
 172:	80 81       	ld	r24, Z
 174:	88 60       	ori	r24, 0x08	; 8
 176:	80 83       	st	Z, r24
 178:	80 81       	ld	r24, Z
 17a:	87 7f       	andi	r24, 0xF7	; 247
 17c:	80 83       	st	Z, r24
		PORTL = _BV(3 - current);
 17e:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <current>
 182:	23 e0       	ldi	r18, 0x03	; 3
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	28 1b       	sub	r18, r24
 188:	31 09       	sbc	r19, r1
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <__vector_23+0x74>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	2a 95       	dec	r18
 196:	e2 f7       	brpl	.-8      	; 0x190 <__vector_23+0x70>
 198:	8c 93       	st	X, r24

		current = (current + 1) % 4;
 19a:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <current>
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	83 70       	andi	r24, 0x03	; 3
 1a4:	90 78       	andi	r25, 0x80	; 128
 1a6:	99 23       	and	r25, r25
 1a8:	24 f4       	brge	.+8      	; 0x1b2 <__vector_23+0x92>
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	8c 6f       	ori	r24, 0xFC	; 252
 1ae:	9f 6f       	ori	r25, 0xFF	; 255
 1b0:	01 96       	adiw	r24, 0x01	; 1
 1b2:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <current>
	}
}
 1b6:	ff 91       	pop	r31
 1b8:	ef 91       	pop	r30
 1ba:	bf 91       	pop	r27
 1bc:	af 91       	pop	r26
 1be:	9f 91       	pop	r25
 1c0:	8f 91       	pop	r24
 1c2:	3f 91       	pop	r19
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0b be       	out	0x3b, r0	; 59
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <display_7_segment>:

void display_7_segment(float value, uint8_t no_of_decimals)
{
 1d4:	3f 92       	push	r3
 1d6:	4f 92       	push	r4
 1d8:	5f 92       	push	r5
 1da:	6f 92       	push	r6
 1dc:	7f 92       	push	r7
 1de:	8f 92       	push	r8
 1e0:	9f 92       	push	r9
 1e2:	af 92       	push	r10
 1e4:	bf 92       	push	r11
 1e6:	cf 92       	push	r12
 1e8:	df 92       	push	r13
 1ea:	ef 92       	push	r14
 1ec:	ff 92       	push	r15
 1ee:	0f 93       	push	r16
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	cd b7       	in	r28, 0x3d	; 61
 1f8:	de b7       	in	r29, 0x3e	; 62
 1fa:	2c 97       	sbiw	r28, 0x0c	; 12
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	6b 01       	movw	r12, r22
 208:	7c 01       	movw	r14, r24
	uint16_t pow_ten[] = { 1, 10, 100, 1000 };
 20a:	88 e0       	ldi	r24, 0x08	; 8
 20c:	e4 e0       	ldi	r30, 0x04	; 4
 20e:	f2 e0       	ldi	r31, 0x02	; 2
 210:	de 01       	movw	r26, r28
 212:	11 96       	adiw	r26, 0x01	; 1
 214:	01 90       	ld	r0, Z+
 216:	0d 92       	st	X+, r0
 218:	8a 95       	dec	r24
 21a:	e1 f7       	brne	.-8      	; 0x214 <display_7_segment+0x40>
	uint32_t real = value * pow_ten[no_of_decimals];
 21c:	04 2f       	mov	r16, r20
 21e:	10 e0       	ldi	r17, 0x00	; 0
 220:	f8 01       	movw	r30, r16
 222:	ee 0f       	add	r30, r30
 224:	ff 1f       	adc	r31, r31
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	8c 0f       	add	r24, r28
 22c:	9d 1f       	adc	r25, r29
 22e:	e8 0f       	add	r30, r24
 230:	f9 1f       	adc	r31, r25
 232:	80 81       	ld	r24, Z
 234:	91 81       	ldd	r25, Z+1	; 0x01
 236:	bc 01       	movw	r22, r24
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	65 d1       	rcall	.+714    	; 0x508 <__floatunsisf>
 23e:	a7 01       	movw	r20, r14
 240:	96 01       	movw	r18, r12
 242:	f0 d1       	rcall	.+992    	; 0x624 <__mulsf3>
 244:	35 d1       	rcall	.+618    	; 0x4b0 <__fixunssfsi>
 246:	69 87       	std	Y+9, r22	; 0x09
 248:	7a 87       	std	Y+10, r23	; 0x0a
 24a:	8b 87       	std	Y+11, r24	; 0x0b
 24c:	9c 87       	std	Y+12, r25	; 0x0c
 24e:	6e 01       	movw	r12, r28
 250:	99 e0       	ldi	r25, 0x09	; 9
 252:	c9 0e       	add	r12, r25
 254:	d1 1c       	adc	r13, r1
 256:	0f 2e       	mov	r0, r31
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	af 2e       	mov	r10, r31
 25c:	f2 e0       	ldi	r31, 0x02	; 2
 25e:	bf 2e       	mov	r11, r31
 260:	f0 2d       	mov	r31, r0

	for(int i = 0; i < 4; i++) {
 262:	e1 2c       	mov	r14, r1
 264:	f1 2c       	mov	r15, r1
		uint8_t digit = (real / pow_ten[3 - i]) % 10;
		value_by_digits[i] = DIGIT[digit] | (i == 3 - no_of_decimals);
 266:	83 e0       	ldi	r24, 0x03	; 3
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	4c 01       	movw	r8, r24
 26c:	80 1a       	sub	r8, r16
 26e:	91 0a       	sbc	r9, r17
 270:	01 e0       	ldi	r16, 0x01	; 1
 272:	31 2c       	mov	r3, r1
{
	uint16_t pow_ten[] = { 1, 10, 100, 1000 };
	uint32_t real = value * pow_ten[no_of_decimals];

	for(int i = 0; i < 4; i++) {
		uint8_t digit = (real / pow_ten[3 - i]) % 10;
 274:	0f 2e       	mov	r0, r31
 276:	fa e0       	ldi	r31, 0x0A	; 10
 278:	4f 2e       	mov	r4, r31
 27a:	51 2c       	mov	r5, r1
 27c:	61 2c       	mov	r6, r1
 27e:	71 2c       	mov	r7, r1
 280:	f0 2d       	mov	r31, r0
 282:	e2 e0       	ldi	r30, 0x02	; 2
 284:	ce 1a       	sub	r12, r30
 286:	d1 08       	sbc	r13, r1
		value_by_digits[i] = DIGIT[digit] | (i == 3 - no_of_decimals);
 288:	10 2f       	mov	r17, r16
 28a:	8e 14       	cp	r8, r14
 28c:	9f 04       	cpc	r9, r15
 28e:	09 f0       	breq	.+2      	; 0x292 <display_7_segment+0xbe>
 290:	13 2d       	mov	r17, r3
{
	uint16_t pow_ten[] = { 1, 10, 100, 1000 };
	uint32_t real = value * pow_ten[no_of_decimals];

	for(int i = 0; i < 4; i++) {
		uint8_t digit = (real / pow_ten[3 - i]) % 10;
 292:	f6 01       	movw	r30, r12
 294:	20 81       	ld	r18, Z
 296:	31 81       	ldd	r19, Z+1	; 0x01
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	50 e0       	ldi	r21, 0x00	; 0
 29c:	69 85       	ldd	r22, Y+9	; 0x09
 29e:	7a 85       	ldd	r23, Y+10	; 0x0a
 2a0:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a2:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a4:	22 d2       	rcall	.+1092   	; 0x6ea <__udivmodsi4>
 2a6:	ca 01       	movw	r24, r20
 2a8:	b9 01       	movw	r22, r18
 2aa:	a3 01       	movw	r20, r6
 2ac:	92 01       	movw	r18, r4
 2ae:	1d d2       	rcall	.+1082   	; 0x6ea <__udivmodsi4>
		value_by_digits[i] = DIGIT[digit] | (i == 3 - no_of_decimals);
 2b0:	e6 2f       	mov	r30, r22
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	e4 5f       	subi	r30, 0xF4	; 244
 2b6:	fd 4f       	sbci	r31, 0xFD	; 253
 2b8:	80 81       	ld	r24, Z
 2ba:	18 2b       	or	r17, r24
 2bc:	f5 01       	movw	r30, r10
 2be:	11 93       	st	Z+, r17
 2c0:	5f 01       	movw	r10, r30
void display_7_segment(float value, uint8_t no_of_decimals)
{
	uint16_t pow_ten[] = { 1, 10, 100, 1000 };
	uint32_t real = value * pow_ten[no_of_decimals];

	for(int i = 0; i < 4; i++) {
 2c2:	ff ef       	ldi	r31, 0xFF	; 255
 2c4:	ef 1a       	sub	r14, r31
 2c6:	ff 0a       	sbc	r15, r31
 2c8:	84 e0       	ldi	r24, 0x04	; 4
 2ca:	e8 16       	cp	r14, r24
 2cc:	f1 04       	cpc	r15, r1
 2ce:	c9 f6       	brne	.-78     	; 0x282 <display_7_segment+0xae>
		uint8_t digit = (real / pow_ten[3 - i]) % 10;
		value_by_digits[i] = DIGIT[digit] | (i == 3 - no_of_decimals);
	}
}
 2d0:	2c 96       	adiw	r28, 0x0c	; 12
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	df 91       	pop	r29
 2de:	cf 91       	pop	r28
 2e0:	1f 91       	pop	r17
 2e2:	0f 91       	pop	r16
 2e4:	ff 90       	pop	r15
 2e6:	ef 90       	pop	r14
 2e8:	df 90       	pop	r13
 2ea:	cf 90       	pop	r12
 2ec:	bf 90       	pop	r11
 2ee:	af 90       	pop	r10
 2f0:	9f 90       	pop	r9
 2f2:	8f 90       	pop	r8
 2f4:	7f 90       	pop	r7
 2f6:	6f 90       	pop	r6
 2f8:	5f 90       	pop	r5
 2fa:	4f 90       	pop	r4
 2fc:	3f 90       	pop	r3
 2fe:	08 95       	ret

00000300 <__vector_20>:

float counter = 0;
ISR(TIMER1_OVF_vect)
{
 300:	1f 92       	push	r1
 302:	0f 92       	push	r0
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	0f 92       	push	r0
 308:	11 24       	eor	r1, r1
 30a:	0b b6       	in	r0, 0x3b	; 59
 30c:	0f 92       	push	r0
 30e:	2f 93       	push	r18
 310:	3f 93       	push	r19
 312:	4f 93       	push	r20
 314:	5f 93       	push	r21
 316:	6f 93       	push	r22
 318:	7f 93       	push	r23
 31a:	8f 93       	push	r24
 31c:	9f 93       	push	r25
 31e:	af 93       	push	r26
 320:	bf 93       	push	r27
 322:	ef 93       	push	r30
 324:	ff 93       	push	r31
	TCNT1 = 58336;
 326:	80 ee       	ldi	r24, 0xE0	; 224
 328:	93 ee       	ldi	r25, 0xE3	; 227
 32a:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 32e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	display_7_segment(counter, 2);
 332:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <__data_end>
 336:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <__data_end+0x1>
 33a:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <__data_end+0x2>
 33e:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <__data_end+0x3>
 342:	42 e0       	ldi	r20, 0x02	; 2
 344:	47 df       	rcall	.-370    	; 0x1d4 <display_7_segment>
	counter += 0.01;
 346:	2a e0       	ldi	r18, 0x0A	; 10
 348:	37 ed       	ldi	r19, 0xD7	; 215
 34a:	43 e2       	ldi	r20, 0x23	; 35
 34c:	5c e3       	ldi	r21, 0x3C	; 60
 34e:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <__data_end>
 352:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <__data_end+0x1>
 356:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <__data_end+0x2>
 35a:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <__data_end+0x3>
 35e:	44 d0       	rcall	.+136    	; 0x3e8 <__addsf3>
 360:	60 93 16 02 	sts	0x0216, r22	; 0x800216 <__data_end>
 364:	70 93 17 02 	sts	0x0217, r23	; 0x800217 <__data_end+0x1>
 368:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <__data_end+0x2>
 36c:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <__data_end+0x3>
}
 370:	ff 91       	pop	r31
 372:	ef 91       	pop	r30
 374:	bf 91       	pop	r27
 376:	af 91       	pop	r26
 378:	9f 91       	pop	r25
 37a:	8f 91       	pop	r24
 37c:	7f 91       	pop	r23
 37e:	6f 91       	pop	r22
 380:	5f 91       	pop	r21
 382:	4f 91       	pop	r20
 384:	3f 91       	pop	r19
 386:	2f 91       	pop	r18
 388:	0f 90       	pop	r0
 38a:	0b be       	out	0x3b, r0	; 59
 38c:	0f 90       	pop	r0
 38e:	0f be       	out	0x3f, r0	; 63
 390:	0f 90       	pop	r0
 392:	1f 90       	pop	r1
 394:	18 95       	reti

00000396 <main>:

int main(void)
{
	sei();
 396:	78 94       	sei

	DDRB = _BV(PB3) | _BV(PB2) | _BV(PB1); // MR, DS, SHCP
 398:	8e e0       	ldi	r24, 0x0E	; 14
 39a:	84 b9       	out	0x04, r24	; 4
	DDRK = _BV(PK3); //	STCP to output
 39c:	88 e0       	ldi	r24, 0x08	; 8
 39e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x7e0107>
	DDRL = 0x0F; // PL0 .. PL3
 3a2:	9f e0       	ldi	r25, 0x0F	; 15
 3a4:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <__TEXT_REGION_LENGTH__+0x7e010a>
	PORTB = _BV(PB3); // MR
 3a8:	85 b9       	out	0x05, r24	; 5

	display_7_segment(123.4, 1);
 3aa:	41 e0       	ldi	r20, 0x01	; 1
 3ac:	6d ec       	ldi	r22, 0xCD	; 205
 3ae:	7c ec       	ldi	r23, 0xCC	; 204
 3b0:	86 ef       	ldi	r24, 0xF6	; 246
 3b2:	92 e4       	ldi	r25, 0x42	; 66
 3b4:	0f df       	rcall	.-482    	; 0x1d4 <display_7_segment>

	// Refreshes display
	TCNT0 = 136;						// 120 ticks (240 Hz)
 3b6:	88 e8       	ldi	r24, 0x88	; 136
 3b8:	86 bd       	out	0x26, r24	; 38
	TCCR0B = _BV(CS02);					// 256 prescaler
 3ba:	84 e0       	ldi	r24, 0x04	; 4
 3bc:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = _BV(TOIE0);				// Enable timer compare interrupt (8 bit)
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>

	// Updates shown value
	TCNT1 = 58336;						// 7200 ticks (4 Hz)
 3c4:	80 ee       	ldi	r24, 0xE0	; 224
 3c6:	93 ee       	ldi	r25, 0xE3	; 227
 3c8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3cc:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TCCR1B |= _BV(CS12);				// 256 prescaler
 3d0:	e1 e8       	ldi	r30, 0x81	; 129
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	84 60       	ori	r24, 0x04	; 4
 3d8:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);				// enable overflow interrupt
 3da:	ef e6       	ldi	r30, 0x6F	; 111
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	80 81       	ld	r24, Z
 3e0:	81 60       	ori	r24, 0x01	; 1
 3e2:	80 83       	st	Z, r24

	while (1);
 3e4:	ff cf       	rjmp	.-2      	; 0x3e4 <main+0x4e>

000003e6 <__subsf3>:
 3e6:	50 58       	subi	r21, 0x80	; 128

000003e8 <__addsf3>:
 3e8:	bb 27       	eor	r27, r27
 3ea:	aa 27       	eor	r26, r26
 3ec:	0e d0       	rcall	.+28     	; 0x40a <__addsf3x>
 3ee:	e0 c0       	rjmp	.+448    	; 0x5b0 <__fp_round>
 3f0:	d1 d0       	rcall	.+418    	; 0x594 <__fp_pscA>
 3f2:	30 f0       	brcs	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f4:	d6 d0       	rcall	.+428    	; 0x5a2 <__fp_pscB>
 3f6:	20 f0       	brcs	.+8      	; 0x400 <__LOCK_REGION_LENGTH__>
 3f8:	31 f4       	brne	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fa:	9f 3f       	cpi	r25, 0xFF	; 255
 3fc:	11 f4       	brne	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	1e f4       	brtc	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	c6 c0       	rjmp	.+396    	; 0x58e <__fp_nan>
 402:	0e f4       	brtc	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	e0 95       	com	r30
 406:	e7 fb       	bst	r30, 7
 408:	bc c0       	rjmp	.+376    	; 0x582 <__fp_inf>

0000040a <__addsf3x>:
 40a:	e9 2f       	mov	r30, r25
 40c:	e2 d0       	rcall	.+452    	; 0x5d2 <__fp_split3>
 40e:	80 f3       	brcs	.-32     	; 0x3f0 <__addsf3+0x8>
 410:	ba 17       	cp	r27, r26
 412:	62 07       	cpc	r22, r18
 414:	73 07       	cpc	r23, r19
 416:	84 07       	cpc	r24, r20
 418:	95 07       	cpc	r25, r21
 41a:	18 f0       	brcs	.+6      	; 0x422 <__addsf3x+0x18>
 41c:	71 f4       	brne	.+28     	; 0x43a <__addsf3x+0x30>
 41e:	9e f5       	brtc	.+102    	; 0x486 <__addsf3x+0x7c>
 420:	fa c0       	rjmp	.+500    	; 0x616 <__fp_zero>
 422:	0e f4       	brtc	.+2      	; 0x426 <__addsf3x+0x1c>
 424:	e0 95       	com	r30
 426:	0b 2e       	mov	r0, r27
 428:	ba 2f       	mov	r27, r26
 42a:	a0 2d       	mov	r26, r0
 42c:	0b 01       	movw	r0, r22
 42e:	b9 01       	movw	r22, r18
 430:	90 01       	movw	r18, r0
 432:	0c 01       	movw	r0, r24
 434:	ca 01       	movw	r24, r20
 436:	a0 01       	movw	r20, r0
 438:	11 24       	eor	r1, r1
 43a:	ff 27       	eor	r31, r31
 43c:	59 1b       	sub	r21, r25
 43e:	99 f0       	breq	.+38     	; 0x466 <__addsf3x+0x5c>
 440:	59 3f       	cpi	r21, 0xF9	; 249
 442:	50 f4       	brcc	.+20     	; 0x458 <__addsf3x+0x4e>
 444:	50 3e       	cpi	r21, 0xE0	; 224
 446:	68 f1       	brcs	.+90     	; 0x4a2 <__addsf3x+0x98>
 448:	1a 16       	cp	r1, r26
 44a:	f0 40       	sbci	r31, 0x00	; 0
 44c:	a2 2f       	mov	r26, r18
 44e:	23 2f       	mov	r18, r19
 450:	34 2f       	mov	r19, r20
 452:	44 27       	eor	r20, r20
 454:	58 5f       	subi	r21, 0xF8	; 248
 456:	f3 cf       	rjmp	.-26     	; 0x43e <__addsf3x+0x34>
 458:	46 95       	lsr	r20
 45a:	37 95       	ror	r19
 45c:	27 95       	ror	r18
 45e:	a7 95       	ror	r26
 460:	f0 40       	sbci	r31, 0x00	; 0
 462:	53 95       	inc	r21
 464:	c9 f7       	brne	.-14     	; 0x458 <__addsf3x+0x4e>
 466:	7e f4       	brtc	.+30     	; 0x486 <__addsf3x+0x7c>
 468:	1f 16       	cp	r1, r31
 46a:	ba 0b       	sbc	r27, r26
 46c:	62 0b       	sbc	r22, r18
 46e:	73 0b       	sbc	r23, r19
 470:	84 0b       	sbc	r24, r20
 472:	ba f0       	brmi	.+46     	; 0x4a2 <__addsf3x+0x98>
 474:	91 50       	subi	r25, 0x01	; 1
 476:	a1 f0       	breq	.+40     	; 0x4a0 <__addsf3x+0x96>
 478:	ff 0f       	add	r31, r31
 47a:	bb 1f       	adc	r27, r27
 47c:	66 1f       	adc	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	c2 f7       	brpl	.-16     	; 0x474 <__addsf3x+0x6a>
 484:	0e c0       	rjmp	.+28     	; 0x4a2 <__addsf3x+0x98>
 486:	ba 0f       	add	r27, r26
 488:	62 1f       	adc	r22, r18
 48a:	73 1f       	adc	r23, r19
 48c:	84 1f       	adc	r24, r20
 48e:	48 f4       	brcc	.+18     	; 0x4a2 <__addsf3x+0x98>
 490:	87 95       	ror	r24
 492:	77 95       	ror	r23
 494:	67 95       	ror	r22
 496:	b7 95       	ror	r27
 498:	f7 95       	ror	r31
 49a:	9e 3f       	cpi	r25, 0xFE	; 254
 49c:	08 f0       	brcs	.+2      	; 0x4a0 <__addsf3x+0x96>
 49e:	b3 cf       	rjmp	.-154    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 4a0:	93 95       	inc	r25
 4a2:	88 0f       	add	r24, r24
 4a4:	08 f0       	brcs	.+2      	; 0x4a8 <__addsf3x+0x9e>
 4a6:	99 27       	eor	r25, r25
 4a8:	ee 0f       	add	r30, r30
 4aa:	97 95       	ror	r25
 4ac:	87 95       	ror	r24
 4ae:	08 95       	ret

000004b0 <__fixunssfsi>:
 4b0:	98 d0       	rcall	.+304    	; 0x5e2 <__fp_splitA>
 4b2:	88 f0       	brcs	.+34     	; 0x4d6 <__fixunssfsi+0x26>
 4b4:	9f 57       	subi	r25, 0x7F	; 127
 4b6:	90 f0       	brcs	.+36     	; 0x4dc <__fixunssfsi+0x2c>
 4b8:	b9 2f       	mov	r27, r25
 4ba:	99 27       	eor	r25, r25
 4bc:	b7 51       	subi	r27, 0x17	; 23
 4be:	a0 f0       	brcs	.+40     	; 0x4e8 <__fixunssfsi+0x38>
 4c0:	d1 f0       	breq	.+52     	; 0x4f6 <__fixunssfsi+0x46>
 4c2:	66 0f       	add	r22, r22
 4c4:	77 1f       	adc	r23, r23
 4c6:	88 1f       	adc	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	1a f0       	brmi	.+6      	; 0x4d2 <__fixunssfsi+0x22>
 4cc:	ba 95       	dec	r27
 4ce:	c9 f7       	brne	.-14     	; 0x4c2 <__fixunssfsi+0x12>
 4d0:	12 c0       	rjmp	.+36     	; 0x4f6 <__fixunssfsi+0x46>
 4d2:	b1 30       	cpi	r27, 0x01	; 1
 4d4:	81 f0       	breq	.+32     	; 0x4f6 <__fixunssfsi+0x46>
 4d6:	9f d0       	rcall	.+318    	; 0x616 <__fp_zero>
 4d8:	b1 e0       	ldi	r27, 0x01	; 1
 4da:	08 95       	ret
 4dc:	9c c0       	rjmp	.+312    	; 0x616 <__fp_zero>
 4de:	67 2f       	mov	r22, r23
 4e0:	78 2f       	mov	r23, r24
 4e2:	88 27       	eor	r24, r24
 4e4:	b8 5f       	subi	r27, 0xF8	; 248
 4e6:	39 f0       	breq	.+14     	; 0x4f6 <__fixunssfsi+0x46>
 4e8:	b9 3f       	cpi	r27, 0xF9	; 249
 4ea:	cc f3       	brlt	.-14     	; 0x4de <__fixunssfsi+0x2e>
 4ec:	86 95       	lsr	r24
 4ee:	77 95       	ror	r23
 4f0:	67 95       	ror	r22
 4f2:	b3 95       	inc	r27
 4f4:	d9 f7       	brne	.-10     	; 0x4ec <__fixunssfsi+0x3c>
 4f6:	3e f4       	brtc	.+14     	; 0x506 <__fixunssfsi+0x56>
 4f8:	90 95       	com	r25
 4fa:	80 95       	com	r24
 4fc:	70 95       	com	r23
 4fe:	61 95       	neg	r22
 500:	7f 4f       	sbci	r23, 0xFF	; 255
 502:	8f 4f       	sbci	r24, 0xFF	; 255
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	08 95       	ret

00000508 <__floatunsisf>:
 508:	e8 94       	clt
 50a:	09 c0       	rjmp	.+18     	; 0x51e <__floatsisf+0x12>

0000050c <__floatsisf>:
 50c:	97 fb       	bst	r25, 7
 50e:	3e f4       	brtc	.+14     	; 0x51e <__floatsisf+0x12>
 510:	90 95       	com	r25
 512:	80 95       	com	r24
 514:	70 95       	com	r23
 516:	61 95       	neg	r22
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	99 23       	and	r25, r25
 520:	a9 f0       	breq	.+42     	; 0x54c <__floatsisf+0x40>
 522:	f9 2f       	mov	r31, r25
 524:	96 e9       	ldi	r25, 0x96	; 150
 526:	bb 27       	eor	r27, r27
 528:	93 95       	inc	r25
 52a:	f6 95       	lsr	r31
 52c:	87 95       	ror	r24
 52e:	77 95       	ror	r23
 530:	67 95       	ror	r22
 532:	b7 95       	ror	r27
 534:	f1 11       	cpse	r31, r1
 536:	f8 cf       	rjmp	.-16     	; 0x528 <__floatsisf+0x1c>
 538:	fa f4       	brpl	.+62     	; 0x578 <__floatsisf+0x6c>
 53a:	bb 0f       	add	r27, r27
 53c:	11 f4       	brne	.+4      	; 0x542 <__floatsisf+0x36>
 53e:	60 ff       	sbrs	r22, 0
 540:	1b c0       	rjmp	.+54     	; 0x578 <__floatsisf+0x6c>
 542:	6f 5f       	subi	r22, 0xFF	; 255
 544:	7f 4f       	sbci	r23, 0xFF	; 255
 546:	8f 4f       	sbci	r24, 0xFF	; 255
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	16 c0       	rjmp	.+44     	; 0x578 <__floatsisf+0x6c>
 54c:	88 23       	and	r24, r24
 54e:	11 f0       	breq	.+4      	; 0x554 <__floatsisf+0x48>
 550:	96 e9       	ldi	r25, 0x96	; 150
 552:	11 c0       	rjmp	.+34     	; 0x576 <__floatsisf+0x6a>
 554:	77 23       	and	r23, r23
 556:	21 f0       	breq	.+8      	; 0x560 <__floatsisf+0x54>
 558:	9e e8       	ldi	r25, 0x8E	; 142
 55a:	87 2f       	mov	r24, r23
 55c:	76 2f       	mov	r23, r22
 55e:	05 c0       	rjmp	.+10     	; 0x56a <__floatsisf+0x5e>
 560:	66 23       	and	r22, r22
 562:	71 f0       	breq	.+28     	; 0x580 <__floatsisf+0x74>
 564:	96 e8       	ldi	r25, 0x86	; 134
 566:	86 2f       	mov	r24, r22
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	2a f0       	brmi	.+10     	; 0x578 <__floatsisf+0x6c>
 56e:	9a 95       	dec	r25
 570:	66 0f       	add	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	88 1f       	adc	r24, r24
 576:	da f7       	brpl	.-10     	; 0x56e <__floatsisf+0x62>
 578:	88 0f       	add	r24, r24
 57a:	96 95       	lsr	r25
 57c:	87 95       	ror	r24
 57e:	97 f9       	bld	r25, 7
 580:	08 95       	ret

00000582 <__fp_inf>:
 582:	97 f9       	bld	r25, 7
 584:	9f 67       	ori	r25, 0x7F	; 127
 586:	80 e8       	ldi	r24, 0x80	; 128
 588:	70 e0       	ldi	r23, 0x00	; 0
 58a:	60 e0       	ldi	r22, 0x00	; 0
 58c:	08 95       	ret

0000058e <__fp_nan>:
 58e:	9f ef       	ldi	r25, 0xFF	; 255
 590:	80 ec       	ldi	r24, 0xC0	; 192
 592:	08 95       	ret

00000594 <__fp_pscA>:
 594:	00 24       	eor	r0, r0
 596:	0a 94       	dec	r0
 598:	16 16       	cp	r1, r22
 59a:	17 06       	cpc	r1, r23
 59c:	18 06       	cpc	r1, r24
 59e:	09 06       	cpc	r0, r25
 5a0:	08 95       	ret

000005a2 <__fp_pscB>:
 5a2:	00 24       	eor	r0, r0
 5a4:	0a 94       	dec	r0
 5a6:	12 16       	cp	r1, r18
 5a8:	13 06       	cpc	r1, r19
 5aa:	14 06       	cpc	r1, r20
 5ac:	05 06       	cpc	r0, r21
 5ae:	08 95       	ret

000005b0 <__fp_round>:
 5b0:	09 2e       	mov	r0, r25
 5b2:	03 94       	inc	r0
 5b4:	00 0c       	add	r0, r0
 5b6:	11 f4       	brne	.+4      	; 0x5bc <__fp_round+0xc>
 5b8:	88 23       	and	r24, r24
 5ba:	52 f0       	brmi	.+20     	; 0x5d0 <__fp_round+0x20>
 5bc:	bb 0f       	add	r27, r27
 5be:	40 f4       	brcc	.+16     	; 0x5d0 <__fp_round+0x20>
 5c0:	bf 2b       	or	r27, r31
 5c2:	11 f4       	brne	.+4      	; 0x5c8 <__fp_round+0x18>
 5c4:	60 ff       	sbrs	r22, 0
 5c6:	04 c0       	rjmp	.+8      	; 0x5d0 <__fp_round+0x20>
 5c8:	6f 5f       	subi	r22, 0xFF	; 255
 5ca:	7f 4f       	sbci	r23, 0xFF	; 255
 5cc:	8f 4f       	sbci	r24, 0xFF	; 255
 5ce:	9f 4f       	sbci	r25, 0xFF	; 255
 5d0:	08 95       	ret

000005d2 <__fp_split3>:
 5d2:	57 fd       	sbrc	r21, 7
 5d4:	90 58       	subi	r25, 0x80	; 128
 5d6:	44 0f       	add	r20, r20
 5d8:	55 1f       	adc	r21, r21
 5da:	59 f0       	breq	.+22     	; 0x5f2 <__fp_splitA+0x10>
 5dc:	5f 3f       	cpi	r21, 0xFF	; 255
 5de:	71 f0       	breq	.+28     	; 0x5fc <__fp_splitA+0x1a>
 5e0:	47 95       	ror	r20

000005e2 <__fp_splitA>:
 5e2:	88 0f       	add	r24, r24
 5e4:	97 fb       	bst	r25, 7
 5e6:	99 1f       	adc	r25, r25
 5e8:	61 f0       	breq	.+24     	; 0x602 <__fp_splitA+0x20>
 5ea:	9f 3f       	cpi	r25, 0xFF	; 255
 5ec:	79 f0       	breq	.+30     	; 0x60c <__fp_splitA+0x2a>
 5ee:	87 95       	ror	r24
 5f0:	08 95       	ret
 5f2:	12 16       	cp	r1, r18
 5f4:	13 06       	cpc	r1, r19
 5f6:	14 06       	cpc	r1, r20
 5f8:	55 1f       	adc	r21, r21
 5fa:	f2 cf       	rjmp	.-28     	; 0x5e0 <__fp_split3+0xe>
 5fc:	46 95       	lsr	r20
 5fe:	f1 df       	rcall	.-30     	; 0x5e2 <__fp_splitA>
 600:	08 c0       	rjmp	.+16     	; 0x612 <__fp_splitA+0x30>
 602:	16 16       	cp	r1, r22
 604:	17 06       	cpc	r1, r23
 606:	18 06       	cpc	r1, r24
 608:	99 1f       	adc	r25, r25
 60a:	f1 cf       	rjmp	.-30     	; 0x5ee <__fp_splitA+0xc>
 60c:	86 95       	lsr	r24
 60e:	71 05       	cpc	r23, r1
 610:	61 05       	cpc	r22, r1
 612:	08 94       	sec
 614:	08 95       	ret

00000616 <__fp_zero>:
 616:	e8 94       	clt

00000618 <__fp_szero>:
 618:	bb 27       	eor	r27, r27
 61a:	66 27       	eor	r22, r22
 61c:	77 27       	eor	r23, r23
 61e:	cb 01       	movw	r24, r22
 620:	97 f9       	bld	r25, 7
 622:	08 95       	ret

00000624 <__mulsf3>:
 624:	0b d0       	rcall	.+22     	; 0x63c <__mulsf3x>
 626:	c4 cf       	rjmp	.-120    	; 0x5b0 <__fp_round>
 628:	b5 df       	rcall	.-150    	; 0x594 <__fp_pscA>
 62a:	28 f0       	brcs	.+10     	; 0x636 <__mulsf3+0x12>
 62c:	ba df       	rcall	.-140    	; 0x5a2 <__fp_pscB>
 62e:	18 f0       	brcs	.+6      	; 0x636 <__mulsf3+0x12>
 630:	95 23       	and	r25, r21
 632:	09 f0       	breq	.+2      	; 0x636 <__mulsf3+0x12>
 634:	a6 cf       	rjmp	.-180    	; 0x582 <__fp_inf>
 636:	ab cf       	rjmp	.-170    	; 0x58e <__fp_nan>
 638:	11 24       	eor	r1, r1
 63a:	ee cf       	rjmp	.-36     	; 0x618 <__fp_szero>

0000063c <__mulsf3x>:
 63c:	ca df       	rcall	.-108    	; 0x5d2 <__fp_split3>
 63e:	a0 f3       	brcs	.-24     	; 0x628 <__mulsf3+0x4>

00000640 <__mulsf3_pse>:
 640:	95 9f       	mul	r25, r21
 642:	d1 f3       	breq	.-12     	; 0x638 <__mulsf3+0x14>
 644:	95 0f       	add	r25, r21
 646:	50 e0       	ldi	r21, 0x00	; 0
 648:	55 1f       	adc	r21, r21
 64a:	62 9f       	mul	r22, r18
 64c:	f0 01       	movw	r30, r0
 64e:	72 9f       	mul	r23, r18
 650:	bb 27       	eor	r27, r27
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	63 9f       	mul	r22, r19
 658:	aa 27       	eor	r26, r26
 65a:	f0 0d       	add	r31, r0
 65c:	b1 1d       	adc	r27, r1
 65e:	aa 1f       	adc	r26, r26
 660:	64 9f       	mul	r22, r20
 662:	66 27       	eor	r22, r22
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	66 1f       	adc	r22, r22
 66a:	82 9f       	mul	r24, r18
 66c:	22 27       	eor	r18, r18
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	73 9f       	mul	r23, r19
 676:	b0 0d       	add	r27, r0
 678:	a1 1d       	adc	r26, r1
 67a:	62 1f       	adc	r22, r18
 67c:	83 9f       	mul	r24, r19
 67e:	a0 0d       	add	r26, r0
 680:	61 1d       	adc	r22, r1
 682:	22 1f       	adc	r18, r18
 684:	74 9f       	mul	r23, r20
 686:	33 27       	eor	r19, r19
 688:	a0 0d       	add	r26, r0
 68a:	61 1d       	adc	r22, r1
 68c:	23 1f       	adc	r18, r19
 68e:	84 9f       	mul	r24, r20
 690:	60 0d       	add	r22, r0
 692:	21 1d       	adc	r18, r1
 694:	82 2f       	mov	r24, r18
 696:	76 2f       	mov	r23, r22
 698:	6a 2f       	mov	r22, r26
 69a:	11 24       	eor	r1, r1
 69c:	9f 57       	subi	r25, 0x7F	; 127
 69e:	50 40       	sbci	r21, 0x00	; 0
 6a0:	8a f0       	brmi	.+34     	; 0x6c4 <__mulsf3_pse+0x84>
 6a2:	e1 f0       	breq	.+56     	; 0x6dc <__mulsf3_pse+0x9c>
 6a4:	88 23       	and	r24, r24
 6a6:	4a f0       	brmi	.+18     	; 0x6ba <__mulsf3_pse+0x7a>
 6a8:	ee 0f       	add	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	bb 1f       	adc	r27, r27
 6ae:	66 1f       	adc	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	88 1f       	adc	r24, r24
 6b4:	91 50       	subi	r25, 0x01	; 1
 6b6:	50 40       	sbci	r21, 0x00	; 0
 6b8:	a9 f7       	brne	.-22     	; 0x6a4 <__mulsf3_pse+0x64>
 6ba:	9e 3f       	cpi	r25, 0xFE	; 254
 6bc:	51 05       	cpc	r21, r1
 6be:	70 f0       	brcs	.+28     	; 0x6dc <__mulsf3_pse+0x9c>
 6c0:	60 cf       	rjmp	.-320    	; 0x582 <__fp_inf>
 6c2:	aa cf       	rjmp	.-172    	; 0x618 <__fp_szero>
 6c4:	5f 3f       	cpi	r21, 0xFF	; 255
 6c6:	ec f3       	brlt	.-6      	; 0x6c2 <__mulsf3_pse+0x82>
 6c8:	98 3e       	cpi	r25, 0xE8	; 232
 6ca:	dc f3       	brlt	.-10     	; 0x6c2 <__mulsf3_pse+0x82>
 6cc:	86 95       	lsr	r24
 6ce:	77 95       	ror	r23
 6d0:	67 95       	ror	r22
 6d2:	b7 95       	ror	r27
 6d4:	f7 95       	ror	r31
 6d6:	e7 95       	ror	r30
 6d8:	9f 5f       	subi	r25, 0xFF	; 255
 6da:	c1 f7       	brne	.-16     	; 0x6cc <__mulsf3_pse+0x8c>
 6dc:	fe 2b       	or	r31, r30
 6de:	88 0f       	add	r24, r24
 6e0:	91 1d       	adc	r25, r1
 6e2:	96 95       	lsr	r25
 6e4:	87 95       	ror	r24
 6e6:	97 f9       	bld	r25, 7
 6e8:	08 95       	ret

000006ea <__udivmodsi4>:
 6ea:	a1 e2       	ldi	r26, 0x21	; 33
 6ec:	1a 2e       	mov	r1, r26
 6ee:	aa 1b       	sub	r26, r26
 6f0:	bb 1b       	sub	r27, r27
 6f2:	fd 01       	movw	r30, r26
 6f4:	0d c0       	rjmp	.+26     	; 0x710 <__udivmodsi4_ep>

000006f6 <__udivmodsi4_loop>:
 6f6:	aa 1f       	adc	r26, r26
 6f8:	bb 1f       	adc	r27, r27
 6fa:	ee 1f       	adc	r30, r30
 6fc:	ff 1f       	adc	r31, r31
 6fe:	a2 17       	cp	r26, r18
 700:	b3 07       	cpc	r27, r19
 702:	e4 07       	cpc	r30, r20
 704:	f5 07       	cpc	r31, r21
 706:	20 f0       	brcs	.+8      	; 0x710 <__udivmodsi4_ep>
 708:	a2 1b       	sub	r26, r18
 70a:	b3 0b       	sbc	r27, r19
 70c:	e4 0b       	sbc	r30, r20
 70e:	f5 0b       	sbc	r31, r21

00000710 <__udivmodsi4_ep>:
 710:	66 1f       	adc	r22, r22
 712:	77 1f       	adc	r23, r23
 714:	88 1f       	adc	r24, r24
 716:	99 1f       	adc	r25, r25
 718:	1a 94       	dec	r1
 71a:	69 f7       	brne	.-38     	; 0x6f6 <__udivmodsi4_loop>
 71c:	60 95       	com	r22
 71e:	70 95       	com	r23
 720:	80 95       	com	r24
 722:	90 95       	com	r25
 724:	9b 01       	movw	r18, r22
 726:	ac 01       	movw	r20, r24
 728:	bd 01       	movw	r22, r26
 72a:	cf 01       	movw	r24, r30
 72c:	08 95       	ret

0000072e <_exit>:
 72e:	f8 94       	cli

00000730 <__stop_program>:
 730:	ff cf       	rjmp	.-2      	; 0x730 <__stop_program>
