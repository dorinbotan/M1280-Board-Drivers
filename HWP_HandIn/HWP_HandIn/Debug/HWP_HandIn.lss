
HWP_HandIn.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000b7c  00000c10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800216  00800216  00000c26  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c26  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000106e  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d9f  00000000  00000000  00001d7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000057e  00000000  00000000  00002b1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  0000309c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000639  00000000  00000000  000031d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000461  00000000  00000000  00003811  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003c72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__bad_interrupt>
   6:	00 00       	nop
   8:	cb c0       	rjmp	.+406    	; 0x1a0 <__bad_interrupt>
   a:	00 00       	nop
   c:	c9 c0       	rjmp	.+402    	; 0x1a0 <__bad_interrupt>
   e:	00 00       	nop
  10:	c7 c0       	rjmp	.+398    	; 0x1a0 <__bad_interrupt>
  12:	00 00       	nop
  14:	c5 c0       	rjmp	.+394    	; 0x1a0 <__bad_interrupt>
  16:	00 00       	nop
  18:	c3 c0       	rjmp	.+390    	; 0x1a0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c1 c0       	rjmp	.+386    	; 0x1a0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bf c0       	rjmp	.+382    	; 0x1a0 <__bad_interrupt>
  22:	00 00       	nop
  24:	bd c0       	rjmp	.+378    	; 0x1a0 <__bad_interrupt>
  26:	00 00       	nop
  28:	bb c0       	rjmp	.+374    	; 0x1a0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b9 c0       	rjmp	.+370    	; 0x1a0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b7 c0       	rjmp	.+366    	; 0x1a0 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__bad_interrupt>
  36:	00 00       	nop
  38:	b3 c0       	rjmp	.+358    	; 0x1a0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b1 c0       	rjmp	.+354    	; 0x1a0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	af c0       	rjmp	.+350    	; 0x1a0 <__bad_interrupt>
  42:	00 00       	nop
  44:	ad c0       	rjmp	.+346    	; 0x1a0 <__bad_interrupt>
  46:	00 00       	nop
  48:	ab c0       	rjmp	.+342    	; 0x1a0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	a9 c0       	rjmp	.+338    	; 0x1a0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__bad_interrupt>
  52:	00 00       	nop
  54:	a5 c0       	rjmp	.+330    	; 0x1a0 <__bad_interrupt>
  56:	00 00       	nop
  58:	a3 c0       	rjmp	.+326    	; 0x1a0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a2 c0       	rjmp	.+324    	; 0x1a2 <__vector_23>
  5e:	00 00       	nop
  60:	9f c0       	rjmp	.+318    	; 0x1a0 <__bad_interrupt>
  62:	00 00       	nop
  64:	9d c0       	rjmp	.+314    	; 0x1a0 <__bad_interrupt>
  66:	00 00       	nop
  68:	9b c0       	rjmp	.+310    	; 0x1a0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	99 c0       	rjmp	.+306    	; 0x1a0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	97 c0       	rjmp	.+302    	; 0x1a0 <__bad_interrupt>
  72:	00 00       	nop
  74:	95 c0       	rjmp	.+298    	; 0x1a0 <__bad_interrupt>
  76:	00 00       	nop
  78:	93 c0       	rjmp	.+294    	; 0x1a0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	91 c0       	rjmp	.+290    	; 0x1a0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8f c0       	rjmp	.+286    	; 0x1a0 <__bad_interrupt>
  82:	00 00       	nop
  84:	8d c0       	rjmp	.+282    	; 0x1a0 <__bad_interrupt>
  86:	00 00       	nop
  88:	8b c0       	rjmp	.+278    	; 0x1a0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	89 c0       	rjmp	.+274    	; 0x1a0 <__bad_interrupt>
  8e:	00 00       	nop
  90:	87 c0       	rjmp	.+270    	; 0x1a0 <__bad_interrupt>
  92:	00 00       	nop
  94:	85 c0       	rjmp	.+266    	; 0x1a0 <__bad_interrupt>
  96:	00 00       	nop
  98:	83 c0       	rjmp	.+262    	; 0x1a0 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	81 c0       	rjmp	.+258    	; 0x1a0 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	7f c0       	rjmp	.+254    	; 0x1a0 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	7d c0       	rjmp	.+250    	; 0x1a0 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	7b c0       	rjmp	.+246    	; 0x1a0 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	79 c0       	rjmp	.+242    	; 0x1a0 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	77 c0       	rjmp	.+238    	; 0x1a0 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	75 c0       	rjmp	.+234    	; 0x1a0 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	73 c0       	rjmp	.+230    	; 0x1a0 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	71 c0       	rjmp	.+226    	; 0x1a0 <__bad_interrupt>
  be:	00 00       	nop
  c0:	6f c0       	rjmp	.+222    	; 0x1a0 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	6d c0       	rjmp	.+218    	; 0x1a0 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	6b c0       	rjmp	.+214    	; 0x1a0 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	69 c0       	rjmp	.+210    	; 0x1a0 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	67 c0       	rjmp	.+206    	; 0x1a0 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	65 c0       	rjmp	.+202    	; 0x1a0 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	63 c0       	rjmp	.+198    	; 0x1a0 <__bad_interrupt>
  da:	00 00       	nop
  dc:	61 c0       	rjmp	.+194    	; 0x1a0 <__bad_interrupt>
  de:	00 00       	nop
  e0:	5f c0       	rjmp	.+190    	; 0x1a0 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	07 63       	ori	r16, 0x37	; 55
  e6:	42 36       	cpi	r20, 0x62	; 98
  e8:	b7 9b       	sbis	0x16, 7	; 22
  ea:	d8 a7       	std	Y+40, r29	; 0x28
  ec:	1a 39       	cpi	r17, 0x9A	; 154
  ee:	68 56       	subi	r22, 0x68	; 104
  f0:	18 ae       	std	Y+56, r1	; 0x38
  f2:	ba ab       	std	Y+50, r27	; 0x32
  f4:	55 8c       	ldd	r5, Z+29	; 0x1d
  f6:	1d 3c       	cpi	r17, 0xCD	; 205
  f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
  fa:	57 63       	ori	r21, 0x37	; 55
  fc:	bd 6d       	ori	r27, 0xDD	; 221
  fe:	ed fd       	.word	0xfded	; ????
 100:	75 3e       	cpi	r23, 0xE5	; 229
 102:	f6 17       	cp	r31, r22
 104:	72 31       	cpi	r23, 0x12	; 18
 106:	bf 00       	.word	0x00bf	; ????
 108:	00 00       	nop
 10a:	80 3f       	cpi	r24, 0xF0	; 240
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 00       	nop
 110:	be 92       	st	-X, r11
 112:	24 49       	sbci	r18, 0x94	; 148
 114:	12 3e       	cpi	r17, 0xE2	; 226
 116:	ab aa       	std	Y+51, r10	; 0x33
 118:	aa 2a       	or	r10, r26
 11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
 11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
 11e:	4c 3e       	cpi	r20, 0xEC	; 236
 120:	00 00       	nop
 122:	00 80       	ld	r0, Z
 124:	be ab       	std	Y+54, r27	; 0x36
 126:	aa aa       	std	Y+50, r10	; 0x32
 128:	aa 3e       	cpi	r26, 0xEA	; 234
 12a:	00 00       	nop
 12c:	00 00       	nop
 12e:	bf 00       	.word	0x00bf	; ????
 130:	00 00       	nop
 132:	80 3f       	cpi	r24, 0xF0	; 240
 134:	00 00       	nop
 136:	00 00       	nop
 138:	00 08       	sbc	r0, r0
 13a:	41 78       	andi	r20, 0x81	; 129
 13c:	d3 bb       	out	0x13, r29	; 19
 13e:	43 87       	std	Z+11, r20	; 0x0b
 140:	d1 13       	cpse	r29, r17
 142:	3d 19       	sub	r19, r13
 144:	0e 3c       	cpi	r16, 0xCE	; 206
 146:	c3 bd       	out	0x23, r28	; 35
 148:	42 82       	std	Z+2, r4	; 0x02
 14a:	ad 2b       	or	r26, r29
 14c:	3e 68       	ori	r19, 0x8E	; 142
 14e:	ec 82       	std	Y+4, r14	; 0x04
 150:	76 be       	out	0x36, r7	; 54
 152:	d9 8f       	std	Y+25, r29	; 0x19
 154:	e1 a9       	ldd	r30, Z+49	; 0x31
 156:	3e 4c       	sbci	r19, 0xCE	; 206
 158:	80 ef       	ldi	r24, 0xF0	; 240
 15a:	ff be       	out	0x3f, r15	; 63
 15c:	01 c4       	rjmp	.+2050   	; 0x960 <exp+0x2e>
 15e:	ff 7f       	andi	r31, 0xFF	; 255
 160:	3f 00       	.word	0x003f	; ????
 162:	00 00       	nop
	...

00000166 <__ctors_end>:
 166:	11 24       	eor	r1, r1
 168:	1f be       	out	0x3f, r1	; 63
 16a:	cf ef       	ldi	r28, 0xFF	; 255
 16c:	d1 e2       	ldi	r29, 0x21	; 33
 16e:	de bf       	out	0x3e, r29	; 62
 170:	cd bf       	out	0x3d, r28	; 61

00000172 <__do_copy_data>:
 172:	12 e0       	ldi	r17, 0x02	; 2
 174:	a0 e0       	ldi	r26, 0x00	; 0
 176:	b2 e0       	ldi	r27, 0x02	; 2
 178:	ec e7       	ldi	r30, 0x7C	; 124
 17a:	fb e0       	ldi	r31, 0x0B	; 11
 17c:	00 e0       	ldi	r16, 0x00	; 0
 17e:	0b bf       	out	0x3b, r16	; 59
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x14>
 182:	07 90       	elpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a6 31       	cpi	r26, 0x16	; 22
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0x10>

0000018c <__do_clear_bss>:
 18c:	22 e0       	ldi	r18, 0x02	; 2
 18e:	a6 e1       	ldi	r26, 0x16	; 22
 190:	b2 e0       	ldi	r27, 0x02	; 2
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	a8 31       	cpi	r26, 0x18	; 24
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	67 d1       	rcall	.+718    	; 0x46c <main>
 19e:	ec c4       	rjmp	.+2520   	; 0xb78 <_exit>

000001a0 <__bad_interrupt>:
 1a0:	2f cf       	rjmp	.-418    	; 0x0 <__vectors>

000001a2 <__vector_23>:
uint8_t init = 0;
int8_t value_by_digits[4] = { -1, -1, -1, -1 };
uint8_t current = 0;

ISR(TIMER0_OVF_vect)
{
 1a2:	1f 92       	push	r1
 1a4:	0f 92       	push	r0
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	0f 92       	push	r0
 1aa:	11 24       	eor	r1, r1
 1ac:	0b b6       	in	r0, 0x3b	; 59
 1ae:	0f 92       	push	r0
 1b0:	2f 93       	push	r18
 1b2:	3f 93       	push	r19
 1b4:	4f 93       	push	r20
 1b6:	5f 93       	push	r21
 1b8:	6f 93       	push	r22
 1ba:	7f 93       	push	r23
 1bc:	8f 93       	push	r24
 1be:	9f 93       	push	r25
 1c0:	af 93       	push	r26
 1c2:	bf 93       	push	r27
 1c4:	cf 93       	push	r28
 1c6:	ef 93       	push	r30
 1c8:	ff 93       	push	r31
	uint8_t digit_value = value_by_digits[current];
 1ca:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <__data_end>
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	e0 50       	subi	r30, 0x00	; 0
 1d2:	fe 4f       	sbci	r31, 0xFE	; 254
 1d4:	c0 81       	ld	r28, Z
	if(digit_value != -1) {
		spi_init(SPI_MODE_MASTER,
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	40 e0       	ldi	r20, 0x00	; 0
 1da:	61 e0       	ldi	r22, 0x01	; 1
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	4e d1       	rcall	.+668    	; 0x47c <spi_init>
				 SPI_DATA_ORDER_LSB_FIRST,
				 SPI_CLOCK_POLARITY_LOW,
				 SPI_CLOCK_PHASE_LEADING);

		spi_send_byte(digit_value);
 1e0:	8c 2f       	mov	r24, r28
 1e2:	62 d1       	rcall	.+708    	; 0x4a8 <spi_send_byte>
		// Display value
		CLEAR_BIT(PORTL, DISPLAY[current]);
 1e4:	ab e0       	ldi	r26, 0x0B	; 11
 1e6:	b1 e0       	ldi	r27, 0x01	; 1
 1e8:	3c 91       	ld	r19, X
 1ea:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <__data_end>
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	e2 5f       	subi	r30, 0xF2	; 242
 1f6:	fd 4f       	sbci	r31, 0xFD	; 253
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	ac 01       	movw	r20, r24
 1fe:	00 80       	ld	r0, Z
 200:	02 c0       	rjmp	.+4      	; 0x206 <__vector_23+0x64>
 202:	44 0f       	add	r20, r20
 204:	55 1f       	adc	r21, r21
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <__vector_23+0x60>
 20a:	24 2f       	mov	r18, r20
 20c:	20 95       	com	r18
 20e:	23 23       	and	r18, r19
 210:	2c 93       	st	X, r18
		CLOCK_PIN(PORTK, PK3);
 212:	e8 e0       	ldi	r30, 0x08	; 8
 214:	f1 e0       	ldi	r31, 0x01	; 1
 216:	20 81       	ld	r18, Z
 218:	28 60       	ori	r18, 0x08	; 8
 21a:	20 83       	st	Z, r18
 21c:	20 81       	ld	r18, Z
 21e:	27 7f       	andi	r18, 0xF7	; 247
 220:	20 83       	st	Z, r18
		SET_BIT(PORTL, current);
 222:	2c 91       	ld	r18, X
 224:	00 90 16 02 	lds	r0, 0x0216	; 0x800216 <__data_end>
 228:	02 c0       	rjmp	.+4      	; 0x22e <__vector_23+0x8c>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <__vector_23+0x88>
 232:	82 2b       	or	r24, r18
 234:	8c 93       	st	X, r24
		current++;
 236:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end>
 23a:	8f 5f       	subi	r24, 0xFF	; 255
		current %= 4;
 23c:	83 70       	andi	r24, 0x03	; 3
 23e:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
	}
}
 242:	ff 91       	pop	r31
 244:	ef 91       	pop	r30
 246:	cf 91       	pop	r28
 248:	bf 91       	pop	r27
 24a:	af 91       	pop	r26
 24c:	9f 91       	pop	r25
 24e:	8f 91       	pop	r24
 250:	7f 91       	pop	r23
 252:	6f 91       	pop	r22
 254:	5f 91       	pop	r21
 256:	4f 91       	pop	r20
 258:	3f 91       	pop	r19
 25a:	2f 91       	pop	r18
 25c:	0f 90       	pop	r0
 25e:	0b be       	out	0x3b, r0	; 59
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <_init_7_segment>:

void _init_7_segment()
{
	DDRB |= _BV(DDB3);
 26a:	23 9a       	sbi	0x04, 3	; 4
	DDRK |= _BV(DDK3);
 26c:	e7 e0       	ldi	r30, 0x07	; 7
 26e:	f1 e0       	ldi	r31, 0x01	; 1
 270:	80 81       	ld	r24, Z
 272:	88 60       	ori	r24, 0x08	; 8
 274:	80 83       	st	Z, r24
	DDRL |= _BV(DDL3) | _BV(DDL2) | _BV(DDL1) | _BV(DDL0);
 276:	ea e0       	ldi	r30, 0x0A	; 10
 278:	f1 e0       	ldi	r31, 0x01	; 1
 27a:	80 81       	ld	r24, Z
 27c:	8f 60       	ori	r24, 0x0F	; 15
 27e:	80 83       	st	Z, r24

	PORTB |= _BV(PB3);
 280:	2b 9a       	sbi	0x05, 3	; 5

	TCCR0B |= _BV(CS01) | _BV(CS00);		// 64 prescaler
 282:	85 b5       	in	r24, 0x25	; 37
 284:	83 60       	ori	r24, 0x03	; 3
 286:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = _BV(TOIE0);					// Enable timer compare interrupt (8 bit)
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 28e:	08 95       	ret

00000290 <display_7_segment>:
}

void display_7_segment(float value, uint8_t no_of_decimals)
{
 290:	4f 92       	push	r4
 292:	5f 92       	push	r5
 294:	6f 92       	push	r6
 296:	7f 92       	push	r7
 298:	8f 92       	push	r8
 29a:	9f 92       	push	r9
 29c:	af 92       	push	r10
 29e:	bf 92       	push	r11
 2a0:	cf 92       	push	r12
 2a2:	df 92       	push	r13
 2a4:	ef 92       	push	r14
 2a6:	ff 92       	push	r15
 2a8:	1f 93       	push	r17
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	00 d0       	rcall	.+0      	; 0x2b0 <display_7_segment+0x20>
 2b0:	00 d0       	rcall	.+0      	; 0x2b2 <display_7_segment+0x22>
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
 2b6:	4b 01       	movw	r8, r22
 2b8:	5c 01       	movw	r10, r24
 2ba:	14 2f       	mov	r17, r20
	if(!init) {
 2bc:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <init>
 2c0:	81 11       	cpse	r24, r1
 2c2:	04 c0       	rjmp	.+8      	; 0x2cc <display_7_segment+0x3c>
		init = 1;
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <init>
		_init_7_segment();
 2ca:	cf df       	rcall	.-98     	; 0x26a <_init_7_segment>
	}

	uint16_t real = value;
 2cc:	c5 01       	movw	r24, r10
 2ce:	b4 01       	movw	r22, r8
 2d0:	c2 d1       	rcall	.+900    	; 0x656 <__fixunssfsi>
	uint16_t decimal = (value - real) * (pow(10, no_of_decimals) + 1);
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	eb d1       	rcall	.+982    	; 0x6ae <__floatunsisf>
 2d8:	2b 01       	movw	r4, r22
 2da:	3c 01       	movw	r6, r24
 2dc:	61 2f       	mov	r22, r17
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	e4 d1       	rcall	.+968    	; 0x6ae <__floatunsisf>
 2e6:	9b 01       	movw	r18, r22
 2e8:	ac 01       	movw	r20, r24
 2ea:	60 e0       	ldi	r22, 0x00	; 0
 2ec:	70 e0       	ldi	r23, 0x00	; 0
 2ee:	80 e2       	ldi	r24, 0x20	; 32
 2f0:	91 e4       	ldi	r25, 0x41	; 65
 2f2:	ce d2       	rcall	.+1436   	; 0x890 <pow>
 2f4:	6b 01       	movw	r12, r22
 2f6:	7c 01       	movw	r14, r24
	
	real = real * pow(10, no_of_decimals) + decimal;
 2f8:	9b 01       	movw	r18, r22
 2fa:	ac 01       	movw	r20, r24
 2fc:	c3 01       	movw	r24, r6
 2fe:	b2 01       	movw	r22, r4
 300:	64 d2       	rcall	.+1224   	; 0x7ca <__mulsf3>
 302:	69 83       	std	Y+1, r22	; 0x01
 304:	7a 83       	std	Y+2, r23	; 0x02
 306:	8b 83       	std	Y+3, r24	; 0x03
 308:	9c 83       	std	Y+4, r25	; 0x04
		init = 1;
		_init_7_segment();
	}

	uint16_t real = value;
	uint16_t decimal = (value - real) * (pow(10, no_of_decimals) + 1);
 30a:	a3 01       	movw	r20, r6
 30c:	92 01       	movw	r18, r4
 30e:	c5 01       	movw	r24, r10
 310:	b4 01       	movw	r22, r8
 312:	d4 d0       	rcall	.+424    	; 0x4bc <__subsf3>
 314:	4b 01       	movw	r8, r22
 316:	5c 01       	movw	r10, r24
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	40 e8       	ldi	r20, 0x80	; 128
 31e:	5f e3       	ldi	r21, 0x3F	; 63
 320:	c7 01       	movw	r24, r14
 322:	b6 01       	movw	r22, r12
 324:	cc d0       	rcall	.+408    	; 0x4be <__addsf3>
 326:	9b 01       	movw	r18, r22
 328:	ac 01       	movw	r20, r24
 32a:	c5 01       	movw	r24, r10
 32c:	b4 01       	movw	r22, r8
 32e:	4d d2       	rcall	.+1178   	; 0x7ca <__mulsf3>
 330:	92 d1       	rcall	.+804    	; 0x656 <__fixunssfsi>
	
	real = real * pow(10, no_of_decimals) + decimal;
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	bb d1       	rcall	.+886    	; 0x6ae <__floatunsisf>
 338:	9b 01       	movw	r18, r22
 33a:	ac 01       	movw	r20, r24
 33c:	69 81       	ldd	r22, Y+1	; 0x01
 33e:	7a 81       	ldd	r23, Y+2	; 0x02
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	9c 81       	ldd	r25, Y+4	; 0x04
 344:	bc d0       	rcall	.+376    	; 0x4be <__addsf3>
 346:	87 d1       	rcall	.+782    	; 0x656 <__fixunssfsi>
 348:	6b 01       	movw	r12, r22
 34a:	7c 01       	movw	r14, r24
 34c:	fb 01       	movw	r30, r22
	
	uint16_t n = real;
 34e:	9b 01       	movw	r18, r22
	uint8_t rLen = 0;
 350:	10 e0       	ldi	r17, 0x00	; 0
	while(n != 0 || rLen == 0)	{
 352:	0b c0       	rjmp	.+22     	; 0x36a <display_7_segment+0xda>
		n /= 10;
 354:	ad ec       	ldi	r26, 0xCD	; 205
 356:	bc ec       	ldi	r27, 0xCC	; 204
 358:	00 d4       	rcall	.+2048   	; 0xb5a <__umulhisi3>
 35a:	9c 01       	movw	r18, r24
 35c:	36 95       	lsr	r19
 35e:	27 95       	ror	r18
 360:	36 95       	lsr	r19
 362:	27 95       	ror	r18
 364:	36 95       	lsr	r19
 366:	27 95       	ror	r18
		++rLen;
 368:	1f 5f       	subi	r17, 0xFF	; 255
	
	real = real * pow(10, no_of_decimals) + decimal;
	
	uint16_t n = real;
	uint8_t rLen = 0;
	while(n != 0 || rLen == 0)	{
 36a:	21 15       	cp	r18, r1
 36c:	31 05       	cpc	r19, r1
 36e:	91 f7       	brne	.-28     	; 0x354 <display_7_segment+0xc4>
 370:	11 23       	and	r17, r17
 372:	81 f3       	breq	.-32     	; 0x354 <display_7_segment+0xc4>
		n /= 10;
		++rLen;
	}
	
	if(rLen > 4) {
 374:	15 30       	cpi	r17, 0x05	; 5
 376:	d8 f0       	brcs	.+54     	; 0x3ae <display_7_segment+0x11e>
		real /= pow(10, rLen - 4);
 378:	61 2f       	mov	r22, r17
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	64 50       	subi	r22, 0x04	; 4
 37e:	71 09       	sbc	r23, r1
 380:	07 2e       	mov	r0, r23
 382:	00 0c       	add	r0, r0
 384:	88 0b       	sbc	r24, r24
 386:	99 0b       	sbc	r25, r25
 388:	94 d1       	rcall	.+808    	; 0x6b2 <__floatsisf>
 38a:	9b 01       	movw	r18, r22
 38c:	ac 01       	movw	r20, r24
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	80 e2       	ldi	r24, 0x20	; 32
 394:	91 e4       	ldi	r25, 0x41	; 65
 396:	7c d2       	rcall	.+1272   	; 0x890 <pow>
 398:	4b 01       	movw	r8, r22
 39a:	5c 01       	movw	r10, r24
 39c:	b6 01       	movw	r22, r12
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	85 d1       	rcall	.+778    	; 0x6ae <__floatunsisf>
 3a4:	a5 01       	movw	r20, r10
 3a6:	94 01       	movw	r18, r8
 3a8:	ee d0       	rcall	.+476    	; 0x586 <__divsf3>
 3aa:	55 d1       	rcall	.+682    	; 0x656 <__fixunssfsi>
 3ac:	fb 01       	movw	r30, r22
	}

	DDRH = 0xFF;
 3ae:	8f ef       	ldi	r24, 0xFF	; 255
 3b0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7e0101>
	PORTH = rLen;
 3b4:	10 93 02 01 	sts	0x0102, r17	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
 3b8:	0f 2e       	mov	r0, r31
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	8f 2e       	mov	r8, r31
 3be:	f2 e0       	ldi	r31, 0x02	; 2
 3c0:	9f 2e       	mov	r9, r31
 3c2:	f0 2d       	mov	r31, r0

	for(int i = 0; i < 4; i++) {
 3c4:	e1 2c       	mov	r14, r1
 3c6:	f1 2c       	mov	r15, r1
		value_by_digits[i] = DIGIT[real % 10] | (i == (4 - rLen));
 3c8:	84 e0       	ldi	r24, 0x04	; 4
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	6c 01       	movw	r12, r24
 3ce:	c1 1a       	sub	r12, r17
 3d0:	d1 08       	sbc	r13, r1
 3d2:	11 e0       	ldi	r17, 0x01	; 1
 3d4:	b1 2c       	mov	r11, r1
 3d6:	9f 01       	movw	r18, r30
 3d8:	ad ec       	ldi	r26, 0xCD	; 205
 3da:	bc ec       	ldi	r27, 0xCC	; 204
 3dc:	be d3       	rcall	.+1916   	; 0xb5a <__umulhisi3>
 3de:	ac 01       	movw	r20, r24
 3e0:	56 95       	lsr	r21
 3e2:	47 95       	ror	r20
 3e4:	56 95       	lsr	r21
 3e6:	47 95       	ror	r20
 3e8:	56 95       	lsr	r21
 3ea:	47 95       	ror	r20
 3ec:	ca 01       	movw	r24, r20
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	44 0f       	add	r20, r20
 3f4:	55 1f       	adc	r21, r21
 3f6:	44 0f       	add	r20, r20
 3f8:	55 1f       	adc	r21, r21
 3fa:	44 0f       	add	r20, r20
 3fc:	55 1f       	adc	r21, r21
 3fe:	48 0f       	add	r20, r24
 400:	59 1f       	adc	r21, r25
 402:	df 01       	movw	r26, r30
 404:	a4 1b       	sub	r26, r20
 406:	b5 0b       	sbc	r27, r21
 408:	ac 5f       	subi	r26, 0xFC	; 252
 40a:	bd 4f       	sbci	r27, 0xFD	; 253
 40c:	91 2f       	mov	r25, r17
 40e:	ce 14       	cp	r12, r14
 410:	df 04       	cpc	r13, r15
 412:	09 f0       	breq	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 414:	9b 2d       	mov	r25, r11
 416:	8c 91       	ld	r24, X
 418:	98 2b       	or	r25, r24
 41a:	d4 01       	movw	r26, r8
 41c:	9d 93       	st	X+, r25
 41e:	4d 01       	movw	r8, r26
		real /= 10;
 420:	9f 01       	movw	r18, r30
 422:	ad ec       	ldi	r26, 0xCD	; 205
 424:	bc ec       	ldi	r27, 0xCC	; 204
 426:	99 d3       	rcall	.+1842   	; 0xb5a <__umulhisi3>
 428:	fc 01       	movw	r30, r24
 42a:	f6 95       	lsr	r31
 42c:	e7 95       	ror	r30
 42e:	f6 95       	lsr	r31
 430:	e7 95       	ror	r30
 432:	f6 95       	lsr	r31
 434:	e7 95       	ror	r30
	}

	DDRH = 0xFF;
	PORTH = rLen;

	for(int i = 0; i < 4; i++) {
 436:	bf ef       	ldi	r27, 0xFF	; 255
 438:	eb 1a       	sub	r14, r27
 43a:	fb 0a       	sbc	r15, r27
 43c:	84 e0       	ldi	r24, 0x04	; 4
 43e:	e8 16       	cp	r14, r24
 440:	f1 04       	cpc	r15, r1
 442:	49 f6       	brne	.-110    	; 0x3d6 <display_7_segment+0x146>
		value_by_digits[i] = DIGIT[real % 10] | (i == (4 - rLen));
		real /= 10;
	}
 444:	0f 90       	pop	r0
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	1f 91       	pop	r17
 452:	ff 90       	pop	r15
 454:	ef 90       	pop	r14
 456:	df 90       	pop	r13
 458:	cf 90       	pop	r12
 45a:	bf 90       	pop	r11
 45c:	af 90       	pop	r10
 45e:	9f 90       	pop	r9
 460:	8f 90       	pop	r8
 462:	7f 90       	pop	r7
 464:	6f 90       	pop	r6
 466:	5f 90       	pop	r5
 468:	4f 90       	pop	r4
 46a:	08 95       	ret

0000046c <main>:
#include <avr/interrupt.h>
#include "display.h"

int main(void)
{
	sei();
 46c:	78 94       	sei

	display_7_segment(1.234, 0);
 46e:	40 e0       	ldi	r20, 0x00	; 0
 470:	66 eb       	ldi	r22, 0xB6	; 182
 472:	73 ef       	ldi	r23, 0xF3	; 243
 474:	8d e9       	ldi	r24, 0x9D	; 157
 476:	9f e3       	ldi	r25, 0x3F	; 63
 478:	0b df       	rcall	.-490    	; 0x290 <display_7_segment>

    while (1) 
    {
    }
 47a:	ff cf       	rjmp	.-2      	; 0x47a <main+0xe>

0000047c <spi_init>:
			  uint8_t phase)
{
	uint8_t has_callback_function = 0;

	//			MOSI		SCK			SS
	DDRB |= _BV(PINB2) | _BV(PINB1) | _BV(PINB0);
 47c:	94 b1       	in	r25, 0x04	; 4
 47e:	97 60       	ori	r25, 0x07	; 7
 480:	94 b9       	out	0x04, r25	; 4
			(has_callback_function << SPIE) |
			_BV(SPE) |
			(data_order << DORD) |
			(mode << MSTR) |
			(polarity << CPOL) |
			(phase << CPHA) |
 482:	22 0f       	add	r18, r18
 484:	22 0f       	add	r18, r18
 486:	23 64       	ori	r18, 0x43	; 67
	SPCR = (
			(has_callback_function << SPIE) |
			_BV(SPE) |
			(data_order << DORD) |
			(mode << MSTR) |
			(polarity << CPOL) |
 488:	44 0f       	add	r20, r20
 48a:	44 0f       	add	r20, r20
 48c:	44 0f       	add	r20, r20
 48e:	42 2b       	or	r20, r18

	SPCR = (
			(has_callback_function << SPIE) |
			_BV(SPE) |
			(data_order << DORD) |
			(mode << MSTR) |
 490:	20 e1       	ldi	r18, 0x10	; 16
 492:	62 9f       	mul	r22, r18
 494:	b0 01       	movw	r22, r0
 496:	11 24       	eor	r1, r1
 498:	64 2b       	or	r22, r20
	DDRB |= _BV(PINB2) | _BV(PINB1) | _BV(PINB0);

	SPCR = (
			(has_callback_function << SPIE) |
			_BV(SPE) |
			(data_order << DORD) |
 49a:	20 e2       	ldi	r18, 0x20	; 32
 49c:	82 9f       	mul	r24, r18
 49e:	c0 01       	movw	r24, r0
 4a0:	11 24       	eor	r1, r1
	uint8_t has_callback_function = 0;

	//			MOSI		SCK			SS
	DDRB |= _BV(PINB2) | _BV(PINB1) | _BV(PINB0);

	SPCR = (
 4a2:	68 2b       	or	r22, r24
 4a4:	6c bd       	out	0x2c, r22	; 44
 4a6:	08 95       	ret

000004a8 <spi_send_byte>:
		   );
}

uint8_t spi_send_byte(uint8_t value)
{
	uint8_t tmp = SREG;
 4a8:	9f b7       	in	r25, 0x3f	; 63
	cli();
 4aa:	f8 94       	cli

	SPDR = value;
 4ac:	8e bd       	out	0x2e, r24	; 46

	while(!(SPSR & _BV(SPIF))){}
 4ae:	0d b4       	in	r0, 0x2d	; 45
 4b0:	07 fe       	sbrs	r0, 7
 4b2:	fd cf       	rjmp	.-6      	; 0x4ae <spi_send_byte+0x6>

	uint8_t received = SPDR;
 4b4:	8e b5       	in	r24, 0x2e	; 46
	
	sei();
 4b6:	78 94       	sei
	SREG = tmp;
 4b8:	9f bf       	out	0x3f, r25	; 63

	return received;
 4ba:	08 95       	ret

000004bc <__subsf3>:
 4bc:	50 58       	subi	r21, 0x80	; 128

000004be <__addsf3>:
 4be:	bb 27       	eor	r27, r27
 4c0:	aa 27       	eor	r26, r26
 4c2:	0e d0       	rcall	.+28     	; 0x4e0 <__addsf3x>
 4c4:	48 c1       	rjmp	.+656    	; 0x756 <__fp_round>
 4c6:	39 d1       	rcall	.+626    	; 0x73a <__fp_pscA>
 4c8:	30 f0       	brcs	.+12     	; 0x4d6 <__addsf3+0x18>
 4ca:	3e d1       	rcall	.+636    	; 0x748 <__fp_pscB>
 4cc:	20 f0       	brcs	.+8      	; 0x4d6 <__addsf3+0x18>
 4ce:	31 f4       	brne	.+12     	; 0x4dc <__addsf3+0x1e>
 4d0:	9f 3f       	cpi	r25, 0xFF	; 255
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__addsf3+0x1a>
 4d4:	1e f4       	brtc	.+6      	; 0x4dc <__addsf3+0x1e>
 4d6:	2e c1       	rjmp	.+604    	; 0x734 <__fp_nan>
 4d8:	0e f4       	brtc	.+2      	; 0x4dc <__addsf3+0x1e>
 4da:	e0 95       	com	r30
 4dc:	e7 fb       	bst	r30, 7
 4de:	24 c1       	rjmp	.+584    	; 0x728 <__fp_inf>

000004e0 <__addsf3x>:
 4e0:	e9 2f       	mov	r30, r25
 4e2:	4a d1       	rcall	.+660    	; 0x778 <__fp_split3>
 4e4:	80 f3       	brcs	.-32     	; 0x4c6 <__addsf3+0x8>
 4e6:	ba 17       	cp	r27, r26
 4e8:	62 07       	cpc	r22, r18
 4ea:	73 07       	cpc	r23, r19
 4ec:	84 07       	cpc	r24, r20
 4ee:	95 07       	cpc	r25, r21
 4f0:	18 f0       	brcs	.+6      	; 0x4f8 <__addsf3x+0x18>
 4f2:	71 f4       	brne	.+28     	; 0x510 <__addsf3x+0x30>
 4f4:	9e f5       	brtc	.+102    	; 0x55c <__addsf3x+0x7c>
 4f6:	62 c1       	rjmp	.+708    	; 0x7bc <__fp_zero>
 4f8:	0e f4       	brtc	.+2      	; 0x4fc <__addsf3x+0x1c>
 4fa:	e0 95       	com	r30
 4fc:	0b 2e       	mov	r0, r27
 4fe:	ba 2f       	mov	r27, r26
 500:	a0 2d       	mov	r26, r0
 502:	0b 01       	movw	r0, r22
 504:	b9 01       	movw	r22, r18
 506:	90 01       	movw	r18, r0
 508:	0c 01       	movw	r0, r24
 50a:	ca 01       	movw	r24, r20
 50c:	a0 01       	movw	r20, r0
 50e:	11 24       	eor	r1, r1
 510:	ff 27       	eor	r31, r31
 512:	59 1b       	sub	r21, r25
 514:	99 f0       	breq	.+38     	; 0x53c <__addsf3x+0x5c>
 516:	59 3f       	cpi	r21, 0xF9	; 249
 518:	50 f4       	brcc	.+20     	; 0x52e <__addsf3x+0x4e>
 51a:	50 3e       	cpi	r21, 0xE0	; 224
 51c:	68 f1       	brcs	.+90     	; 0x578 <__addsf3x+0x98>
 51e:	1a 16       	cp	r1, r26
 520:	f0 40       	sbci	r31, 0x00	; 0
 522:	a2 2f       	mov	r26, r18
 524:	23 2f       	mov	r18, r19
 526:	34 2f       	mov	r19, r20
 528:	44 27       	eor	r20, r20
 52a:	58 5f       	subi	r21, 0xF8	; 248
 52c:	f3 cf       	rjmp	.-26     	; 0x514 <__addsf3x+0x34>
 52e:	46 95       	lsr	r20
 530:	37 95       	ror	r19
 532:	27 95       	ror	r18
 534:	a7 95       	ror	r26
 536:	f0 40       	sbci	r31, 0x00	; 0
 538:	53 95       	inc	r21
 53a:	c9 f7       	brne	.-14     	; 0x52e <__addsf3x+0x4e>
 53c:	7e f4       	brtc	.+30     	; 0x55c <__addsf3x+0x7c>
 53e:	1f 16       	cp	r1, r31
 540:	ba 0b       	sbc	r27, r26
 542:	62 0b       	sbc	r22, r18
 544:	73 0b       	sbc	r23, r19
 546:	84 0b       	sbc	r24, r20
 548:	ba f0       	brmi	.+46     	; 0x578 <__addsf3x+0x98>
 54a:	91 50       	subi	r25, 0x01	; 1
 54c:	a1 f0       	breq	.+40     	; 0x576 <__addsf3x+0x96>
 54e:	ff 0f       	add	r31, r31
 550:	bb 1f       	adc	r27, r27
 552:	66 1f       	adc	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	c2 f7       	brpl	.-16     	; 0x54a <__addsf3x+0x6a>
 55a:	0e c0       	rjmp	.+28     	; 0x578 <__addsf3x+0x98>
 55c:	ba 0f       	add	r27, r26
 55e:	62 1f       	adc	r22, r18
 560:	73 1f       	adc	r23, r19
 562:	84 1f       	adc	r24, r20
 564:	48 f4       	brcc	.+18     	; 0x578 <__addsf3x+0x98>
 566:	87 95       	ror	r24
 568:	77 95       	ror	r23
 56a:	67 95       	ror	r22
 56c:	b7 95       	ror	r27
 56e:	f7 95       	ror	r31
 570:	9e 3f       	cpi	r25, 0xFE	; 254
 572:	08 f0       	brcs	.+2      	; 0x576 <__addsf3x+0x96>
 574:	b3 cf       	rjmp	.-154    	; 0x4dc <__addsf3+0x1e>
 576:	93 95       	inc	r25
 578:	88 0f       	add	r24, r24
 57a:	08 f0       	brcs	.+2      	; 0x57e <__addsf3x+0x9e>
 57c:	99 27       	eor	r25, r25
 57e:	ee 0f       	add	r30, r30
 580:	97 95       	ror	r25
 582:	87 95       	ror	r24
 584:	08 95       	ret

00000586 <__divsf3>:
 586:	0c d0       	rcall	.+24     	; 0x5a0 <__divsf3x>
 588:	e6 c0       	rjmp	.+460    	; 0x756 <__fp_round>
 58a:	de d0       	rcall	.+444    	; 0x748 <__fp_pscB>
 58c:	40 f0       	brcs	.+16     	; 0x59e <__divsf3+0x18>
 58e:	d5 d0       	rcall	.+426    	; 0x73a <__fp_pscA>
 590:	30 f0       	brcs	.+12     	; 0x59e <__divsf3+0x18>
 592:	21 f4       	brne	.+8      	; 0x59c <__divsf3+0x16>
 594:	5f 3f       	cpi	r21, 0xFF	; 255
 596:	19 f0       	breq	.+6      	; 0x59e <__divsf3+0x18>
 598:	c7 c0       	rjmp	.+398    	; 0x728 <__fp_inf>
 59a:	51 11       	cpse	r21, r1
 59c:	10 c1       	rjmp	.+544    	; 0x7be <__fp_szero>
 59e:	ca c0       	rjmp	.+404    	; 0x734 <__fp_nan>

000005a0 <__divsf3x>:
 5a0:	eb d0       	rcall	.+470    	; 0x778 <__fp_split3>
 5a2:	98 f3       	brcs	.-26     	; 0x58a <__divsf3+0x4>

000005a4 <__divsf3_pse>:
 5a4:	99 23       	and	r25, r25
 5a6:	c9 f3       	breq	.-14     	; 0x59a <__divsf3+0x14>
 5a8:	55 23       	and	r21, r21
 5aa:	b1 f3       	breq	.-20     	; 0x598 <__divsf3+0x12>
 5ac:	95 1b       	sub	r25, r21
 5ae:	55 0b       	sbc	r21, r21
 5b0:	bb 27       	eor	r27, r27
 5b2:	aa 27       	eor	r26, r26
 5b4:	62 17       	cp	r22, r18
 5b6:	73 07       	cpc	r23, r19
 5b8:	84 07       	cpc	r24, r20
 5ba:	38 f0       	brcs	.+14     	; 0x5ca <__divsf3_pse+0x26>
 5bc:	9f 5f       	subi	r25, 0xFF	; 255
 5be:	5f 4f       	sbci	r21, 0xFF	; 255
 5c0:	22 0f       	add	r18, r18
 5c2:	33 1f       	adc	r19, r19
 5c4:	44 1f       	adc	r20, r20
 5c6:	aa 1f       	adc	r26, r26
 5c8:	a9 f3       	breq	.-22     	; 0x5b4 <__divsf3_pse+0x10>
 5ca:	33 d0       	rcall	.+102    	; 0x632 <__divsf3_pse+0x8e>
 5cc:	0e 2e       	mov	r0, r30
 5ce:	3a f0       	brmi	.+14     	; 0x5de <__divsf3_pse+0x3a>
 5d0:	e0 e8       	ldi	r30, 0x80	; 128
 5d2:	30 d0       	rcall	.+96     	; 0x634 <__divsf3_pse+0x90>
 5d4:	91 50       	subi	r25, 0x01	; 1
 5d6:	50 40       	sbci	r21, 0x00	; 0
 5d8:	e6 95       	lsr	r30
 5da:	00 1c       	adc	r0, r0
 5dc:	ca f7       	brpl	.-14     	; 0x5d0 <__divsf3_pse+0x2c>
 5de:	29 d0       	rcall	.+82     	; 0x632 <__divsf3_pse+0x8e>
 5e0:	fe 2f       	mov	r31, r30
 5e2:	27 d0       	rcall	.+78     	; 0x632 <__divsf3_pse+0x8e>
 5e4:	66 0f       	add	r22, r22
 5e6:	77 1f       	adc	r23, r23
 5e8:	88 1f       	adc	r24, r24
 5ea:	bb 1f       	adc	r27, r27
 5ec:	26 17       	cp	r18, r22
 5ee:	37 07       	cpc	r19, r23
 5f0:	48 07       	cpc	r20, r24
 5f2:	ab 07       	cpc	r26, r27
 5f4:	b0 e8       	ldi	r27, 0x80	; 128
 5f6:	09 f0       	breq	.+2      	; 0x5fa <__divsf3_pse+0x56>
 5f8:	bb 0b       	sbc	r27, r27
 5fa:	80 2d       	mov	r24, r0
 5fc:	bf 01       	movw	r22, r30
 5fe:	ff 27       	eor	r31, r31
 600:	93 58       	subi	r25, 0x83	; 131
 602:	5f 4f       	sbci	r21, 0xFF	; 255
 604:	2a f0       	brmi	.+10     	; 0x610 <__divsf3_pse+0x6c>
 606:	9e 3f       	cpi	r25, 0xFE	; 254
 608:	51 05       	cpc	r21, r1
 60a:	68 f0       	brcs	.+26     	; 0x626 <__divsf3_pse+0x82>
 60c:	8d c0       	rjmp	.+282    	; 0x728 <__fp_inf>
 60e:	d7 c0       	rjmp	.+430    	; 0x7be <__fp_szero>
 610:	5f 3f       	cpi	r21, 0xFF	; 255
 612:	ec f3       	brlt	.-6      	; 0x60e <__divsf3_pse+0x6a>
 614:	98 3e       	cpi	r25, 0xE8	; 232
 616:	dc f3       	brlt	.-10     	; 0x60e <__divsf3_pse+0x6a>
 618:	86 95       	lsr	r24
 61a:	77 95       	ror	r23
 61c:	67 95       	ror	r22
 61e:	b7 95       	ror	r27
 620:	f7 95       	ror	r31
 622:	9f 5f       	subi	r25, 0xFF	; 255
 624:	c9 f7       	brne	.-14     	; 0x618 <__divsf3_pse+0x74>
 626:	88 0f       	add	r24, r24
 628:	91 1d       	adc	r25, r1
 62a:	96 95       	lsr	r25
 62c:	87 95       	ror	r24
 62e:	97 f9       	bld	r25, 7
 630:	08 95       	ret
 632:	e1 e0       	ldi	r30, 0x01	; 1
 634:	66 0f       	add	r22, r22
 636:	77 1f       	adc	r23, r23
 638:	88 1f       	adc	r24, r24
 63a:	bb 1f       	adc	r27, r27
 63c:	62 17       	cp	r22, r18
 63e:	73 07       	cpc	r23, r19
 640:	84 07       	cpc	r24, r20
 642:	ba 07       	cpc	r27, r26
 644:	20 f0       	brcs	.+8      	; 0x64e <__divsf3_pse+0xaa>
 646:	62 1b       	sub	r22, r18
 648:	73 0b       	sbc	r23, r19
 64a:	84 0b       	sbc	r24, r20
 64c:	ba 0b       	sbc	r27, r26
 64e:	ee 1f       	adc	r30, r30
 650:	88 f7       	brcc	.-30     	; 0x634 <__divsf3_pse+0x90>
 652:	e0 95       	com	r30
 654:	08 95       	ret

00000656 <__fixunssfsi>:
 656:	98 d0       	rcall	.+304    	; 0x788 <__fp_splitA>
 658:	88 f0       	brcs	.+34     	; 0x67c <__fixunssfsi+0x26>
 65a:	9f 57       	subi	r25, 0x7F	; 127
 65c:	90 f0       	brcs	.+36     	; 0x682 <__fixunssfsi+0x2c>
 65e:	b9 2f       	mov	r27, r25
 660:	99 27       	eor	r25, r25
 662:	b7 51       	subi	r27, 0x17	; 23
 664:	a0 f0       	brcs	.+40     	; 0x68e <__fixunssfsi+0x38>
 666:	d1 f0       	breq	.+52     	; 0x69c <__fixunssfsi+0x46>
 668:	66 0f       	add	r22, r22
 66a:	77 1f       	adc	r23, r23
 66c:	88 1f       	adc	r24, r24
 66e:	99 1f       	adc	r25, r25
 670:	1a f0       	brmi	.+6      	; 0x678 <__fixunssfsi+0x22>
 672:	ba 95       	dec	r27
 674:	c9 f7       	brne	.-14     	; 0x668 <__fixunssfsi+0x12>
 676:	12 c0       	rjmp	.+36     	; 0x69c <__fixunssfsi+0x46>
 678:	b1 30       	cpi	r27, 0x01	; 1
 67a:	81 f0       	breq	.+32     	; 0x69c <__fixunssfsi+0x46>
 67c:	9f d0       	rcall	.+318    	; 0x7bc <__fp_zero>
 67e:	b1 e0       	ldi	r27, 0x01	; 1
 680:	08 95       	ret
 682:	9c c0       	rjmp	.+312    	; 0x7bc <__fp_zero>
 684:	67 2f       	mov	r22, r23
 686:	78 2f       	mov	r23, r24
 688:	88 27       	eor	r24, r24
 68a:	b8 5f       	subi	r27, 0xF8	; 248
 68c:	39 f0       	breq	.+14     	; 0x69c <__fixunssfsi+0x46>
 68e:	b9 3f       	cpi	r27, 0xF9	; 249
 690:	cc f3       	brlt	.-14     	; 0x684 <__fixunssfsi+0x2e>
 692:	86 95       	lsr	r24
 694:	77 95       	ror	r23
 696:	67 95       	ror	r22
 698:	b3 95       	inc	r27
 69a:	d9 f7       	brne	.-10     	; 0x692 <__fixunssfsi+0x3c>
 69c:	3e f4       	brtc	.+14     	; 0x6ac <__fixunssfsi+0x56>
 69e:	90 95       	com	r25
 6a0:	80 95       	com	r24
 6a2:	70 95       	com	r23
 6a4:	61 95       	neg	r22
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	08 95       	ret

000006ae <__floatunsisf>:
 6ae:	e8 94       	clt
 6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <__floatsisf+0x12>

000006b2 <__floatsisf>:
 6b2:	97 fb       	bst	r25, 7
 6b4:	3e f4       	brtc	.+14     	; 0x6c4 <__floatsisf+0x12>
 6b6:	90 95       	com	r25
 6b8:	80 95       	com	r24
 6ba:	70 95       	com	r23
 6bc:	61 95       	neg	r22
 6be:	7f 4f       	sbci	r23, 0xFF	; 255
 6c0:	8f 4f       	sbci	r24, 0xFF	; 255
 6c2:	9f 4f       	sbci	r25, 0xFF	; 255
 6c4:	99 23       	and	r25, r25
 6c6:	a9 f0       	breq	.+42     	; 0x6f2 <__floatsisf+0x40>
 6c8:	f9 2f       	mov	r31, r25
 6ca:	96 e9       	ldi	r25, 0x96	; 150
 6cc:	bb 27       	eor	r27, r27
 6ce:	93 95       	inc	r25
 6d0:	f6 95       	lsr	r31
 6d2:	87 95       	ror	r24
 6d4:	77 95       	ror	r23
 6d6:	67 95       	ror	r22
 6d8:	b7 95       	ror	r27
 6da:	f1 11       	cpse	r31, r1
 6dc:	f8 cf       	rjmp	.-16     	; 0x6ce <__floatsisf+0x1c>
 6de:	fa f4       	brpl	.+62     	; 0x71e <__floatsisf+0x6c>
 6e0:	bb 0f       	add	r27, r27
 6e2:	11 f4       	brne	.+4      	; 0x6e8 <__floatsisf+0x36>
 6e4:	60 ff       	sbrs	r22, 0
 6e6:	1b c0       	rjmp	.+54     	; 0x71e <__floatsisf+0x6c>
 6e8:	6f 5f       	subi	r22, 0xFF	; 255
 6ea:	7f 4f       	sbci	r23, 0xFF	; 255
 6ec:	8f 4f       	sbci	r24, 0xFF	; 255
 6ee:	9f 4f       	sbci	r25, 0xFF	; 255
 6f0:	16 c0       	rjmp	.+44     	; 0x71e <__floatsisf+0x6c>
 6f2:	88 23       	and	r24, r24
 6f4:	11 f0       	breq	.+4      	; 0x6fa <__floatsisf+0x48>
 6f6:	96 e9       	ldi	r25, 0x96	; 150
 6f8:	11 c0       	rjmp	.+34     	; 0x71c <__floatsisf+0x6a>
 6fa:	77 23       	and	r23, r23
 6fc:	21 f0       	breq	.+8      	; 0x706 <__floatsisf+0x54>
 6fe:	9e e8       	ldi	r25, 0x8E	; 142
 700:	87 2f       	mov	r24, r23
 702:	76 2f       	mov	r23, r22
 704:	05 c0       	rjmp	.+10     	; 0x710 <__floatsisf+0x5e>
 706:	66 23       	and	r22, r22
 708:	71 f0       	breq	.+28     	; 0x726 <__floatsisf+0x74>
 70a:	96 e8       	ldi	r25, 0x86	; 134
 70c:	86 2f       	mov	r24, r22
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	60 e0       	ldi	r22, 0x00	; 0
 712:	2a f0       	brmi	.+10     	; 0x71e <__floatsisf+0x6c>
 714:	9a 95       	dec	r25
 716:	66 0f       	add	r22, r22
 718:	77 1f       	adc	r23, r23
 71a:	88 1f       	adc	r24, r24
 71c:	da f7       	brpl	.-10     	; 0x714 <__floatsisf+0x62>
 71e:	88 0f       	add	r24, r24
 720:	96 95       	lsr	r25
 722:	87 95       	ror	r24
 724:	97 f9       	bld	r25, 7
 726:	08 95       	ret

00000728 <__fp_inf>:
 728:	97 f9       	bld	r25, 7
 72a:	9f 67       	ori	r25, 0x7F	; 127
 72c:	80 e8       	ldi	r24, 0x80	; 128
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	60 e0       	ldi	r22, 0x00	; 0
 732:	08 95       	ret

00000734 <__fp_nan>:
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	80 ec       	ldi	r24, 0xC0	; 192
 738:	08 95       	ret

0000073a <__fp_pscA>:
 73a:	00 24       	eor	r0, r0
 73c:	0a 94       	dec	r0
 73e:	16 16       	cp	r1, r22
 740:	17 06       	cpc	r1, r23
 742:	18 06       	cpc	r1, r24
 744:	09 06       	cpc	r0, r25
 746:	08 95       	ret

00000748 <__fp_pscB>:
 748:	00 24       	eor	r0, r0
 74a:	0a 94       	dec	r0
 74c:	12 16       	cp	r1, r18
 74e:	13 06       	cpc	r1, r19
 750:	14 06       	cpc	r1, r20
 752:	05 06       	cpc	r0, r21
 754:	08 95       	ret

00000756 <__fp_round>:
 756:	09 2e       	mov	r0, r25
 758:	03 94       	inc	r0
 75a:	00 0c       	add	r0, r0
 75c:	11 f4       	brne	.+4      	; 0x762 <__fp_round+0xc>
 75e:	88 23       	and	r24, r24
 760:	52 f0       	brmi	.+20     	; 0x776 <__fp_round+0x20>
 762:	bb 0f       	add	r27, r27
 764:	40 f4       	brcc	.+16     	; 0x776 <__fp_round+0x20>
 766:	bf 2b       	or	r27, r31
 768:	11 f4       	brne	.+4      	; 0x76e <__fp_round+0x18>
 76a:	60 ff       	sbrs	r22, 0
 76c:	04 c0       	rjmp	.+8      	; 0x776 <__fp_round+0x20>
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	08 95       	ret

00000778 <__fp_split3>:
 778:	57 fd       	sbrc	r21, 7
 77a:	90 58       	subi	r25, 0x80	; 128
 77c:	44 0f       	add	r20, r20
 77e:	55 1f       	adc	r21, r21
 780:	59 f0       	breq	.+22     	; 0x798 <__fp_splitA+0x10>
 782:	5f 3f       	cpi	r21, 0xFF	; 255
 784:	71 f0       	breq	.+28     	; 0x7a2 <__fp_splitA+0x1a>
 786:	47 95       	ror	r20

00000788 <__fp_splitA>:
 788:	88 0f       	add	r24, r24
 78a:	97 fb       	bst	r25, 7
 78c:	99 1f       	adc	r25, r25
 78e:	61 f0       	breq	.+24     	; 0x7a8 <__fp_splitA+0x20>
 790:	9f 3f       	cpi	r25, 0xFF	; 255
 792:	79 f0       	breq	.+30     	; 0x7b2 <__fp_splitA+0x2a>
 794:	87 95       	ror	r24
 796:	08 95       	ret
 798:	12 16       	cp	r1, r18
 79a:	13 06       	cpc	r1, r19
 79c:	14 06       	cpc	r1, r20
 79e:	55 1f       	adc	r21, r21
 7a0:	f2 cf       	rjmp	.-28     	; 0x786 <__fp_split3+0xe>
 7a2:	46 95       	lsr	r20
 7a4:	f1 df       	rcall	.-30     	; 0x788 <__fp_splitA>
 7a6:	08 c0       	rjmp	.+16     	; 0x7b8 <__fp_splitA+0x30>
 7a8:	16 16       	cp	r1, r22
 7aa:	17 06       	cpc	r1, r23
 7ac:	18 06       	cpc	r1, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	f1 cf       	rjmp	.-30     	; 0x794 <__fp_splitA+0xc>
 7b2:	86 95       	lsr	r24
 7b4:	71 05       	cpc	r23, r1
 7b6:	61 05       	cpc	r22, r1
 7b8:	08 94       	sec
 7ba:	08 95       	ret

000007bc <__fp_zero>:
 7bc:	e8 94       	clt

000007be <__fp_szero>:
 7be:	bb 27       	eor	r27, r27
 7c0:	66 27       	eor	r22, r22
 7c2:	77 27       	eor	r23, r23
 7c4:	cb 01       	movw	r24, r22
 7c6:	97 f9       	bld	r25, 7
 7c8:	08 95       	ret

000007ca <__mulsf3>:
 7ca:	0b d0       	rcall	.+22     	; 0x7e2 <__mulsf3x>
 7cc:	c4 cf       	rjmp	.-120    	; 0x756 <__fp_round>
 7ce:	b5 df       	rcall	.-150    	; 0x73a <__fp_pscA>
 7d0:	28 f0       	brcs	.+10     	; 0x7dc <__mulsf3+0x12>
 7d2:	ba df       	rcall	.-140    	; 0x748 <__fp_pscB>
 7d4:	18 f0       	brcs	.+6      	; 0x7dc <__mulsf3+0x12>
 7d6:	95 23       	and	r25, r21
 7d8:	09 f0       	breq	.+2      	; 0x7dc <__mulsf3+0x12>
 7da:	a6 cf       	rjmp	.-180    	; 0x728 <__fp_inf>
 7dc:	ab cf       	rjmp	.-170    	; 0x734 <__fp_nan>
 7de:	11 24       	eor	r1, r1
 7e0:	ee cf       	rjmp	.-36     	; 0x7be <__fp_szero>

000007e2 <__mulsf3x>:
 7e2:	ca df       	rcall	.-108    	; 0x778 <__fp_split3>
 7e4:	a0 f3       	brcs	.-24     	; 0x7ce <__mulsf3+0x4>

000007e6 <__mulsf3_pse>:
 7e6:	95 9f       	mul	r25, r21
 7e8:	d1 f3       	breq	.-12     	; 0x7de <__mulsf3+0x14>
 7ea:	95 0f       	add	r25, r21
 7ec:	50 e0       	ldi	r21, 0x00	; 0
 7ee:	55 1f       	adc	r21, r21
 7f0:	62 9f       	mul	r22, r18
 7f2:	f0 01       	movw	r30, r0
 7f4:	72 9f       	mul	r23, r18
 7f6:	bb 27       	eor	r27, r27
 7f8:	f0 0d       	add	r31, r0
 7fa:	b1 1d       	adc	r27, r1
 7fc:	63 9f       	mul	r22, r19
 7fe:	aa 27       	eor	r26, r26
 800:	f0 0d       	add	r31, r0
 802:	b1 1d       	adc	r27, r1
 804:	aa 1f       	adc	r26, r26
 806:	64 9f       	mul	r22, r20
 808:	66 27       	eor	r22, r22
 80a:	b0 0d       	add	r27, r0
 80c:	a1 1d       	adc	r26, r1
 80e:	66 1f       	adc	r22, r22
 810:	82 9f       	mul	r24, r18
 812:	22 27       	eor	r18, r18
 814:	b0 0d       	add	r27, r0
 816:	a1 1d       	adc	r26, r1
 818:	62 1f       	adc	r22, r18
 81a:	73 9f       	mul	r23, r19
 81c:	b0 0d       	add	r27, r0
 81e:	a1 1d       	adc	r26, r1
 820:	62 1f       	adc	r22, r18
 822:	83 9f       	mul	r24, r19
 824:	a0 0d       	add	r26, r0
 826:	61 1d       	adc	r22, r1
 828:	22 1f       	adc	r18, r18
 82a:	74 9f       	mul	r23, r20
 82c:	33 27       	eor	r19, r19
 82e:	a0 0d       	add	r26, r0
 830:	61 1d       	adc	r22, r1
 832:	23 1f       	adc	r18, r19
 834:	84 9f       	mul	r24, r20
 836:	60 0d       	add	r22, r0
 838:	21 1d       	adc	r18, r1
 83a:	82 2f       	mov	r24, r18
 83c:	76 2f       	mov	r23, r22
 83e:	6a 2f       	mov	r22, r26
 840:	11 24       	eor	r1, r1
 842:	9f 57       	subi	r25, 0x7F	; 127
 844:	50 40       	sbci	r21, 0x00	; 0
 846:	8a f0       	brmi	.+34     	; 0x86a <__mulsf3_pse+0x84>
 848:	e1 f0       	breq	.+56     	; 0x882 <__mulsf3_pse+0x9c>
 84a:	88 23       	and	r24, r24
 84c:	4a f0       	brmi	.+18     	; 0x860 <__mulsf3_pse+0x7a>
 84e:	ee 0f       	add	r30, r30
 850:	ff 1f       	adc	r31, r31
 852:	bb 1f       	adc	r27, r27
 854:	66 1f       	adc	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	91 50       	subi	r25, 0x01	; 1
 85c:	50 40       	sbci	r21, 0x00	; 0
 85e:	a9 f7       	brne	.-22     	; 0x84a <__mulsf3_pse+0x64>
 860:	9e 3f       	cpi	r25, 0xFE	; 254
 862:	51 05       	cpc	r21, r1
 864:	70 f0       	brcs	.+28     	; 0x882 <__mulsf3_pse+0x9c>
 866:	60 cf       	rjmp	.-320    	; 0x728 <__fp_inf>
 868:	aa cf       	rjmp	.-172    	; 0x7be <__fp_szero>
 86a:	5f 3f       	cpi	r21, 0xFF	; 255
 86c:	ec f3       	brlt	.-6      	; 0x868 <__mulsf3_pse+0x82>
 86e:	98 3e       	cpi	r25, 0xE8	; 232
 870:	dc f3       	brlt	.-10     	; 0x868 <__mulsf3_pse+0x82>
 872:	86 95       	lsr	r24
 874:	77 95       	ror	r23
 876:	67 95       	ror	r22
 878:	b7 95       	ror	r27
 87a:	f7 95       	ror	r31
 87c:	e7 95       	ror	r30
 87e:	9f 5f       	subi	r25, 0xFF	; 255
 880:	c1 f7       	brne	.-16     	; 0x872 <__mulsf3_pse+0x8c>
 882:	fe 2b       	or	r31, r30
 884:	88 0f       	add	r24, r24
 886:	91 1d       	adc	r25, r1
 888:	96 95       	lsr	r25
 88a:	87 95       	ror	r24
 88c:	97 f9       	bld	r25, 7
 88e:	08 95       	ret

00000890 <pow>:
 890:	fa 01       	movw	r30, r20
 892:	ee 0f       	add	r30, r30
 894:	ff 1f       	adc	r31, r31
 896:	30 96       	adiw	r30, 0x00	; 0
 898:	21 05       	cpc	r18, r1
 89a:	31 05       	cpc	r19, r1
 89c:	99 f1       	breq	.+102    	; 0x904 <pow+0x74>
 89e:	61 15       	cp	r22, r1
 8a0:	71 05       	cpc	r23, r1
 8a2:	61 f4       	brne	.+24     	; 0x8bc <pow+0x2c>
 8a4:	80 38       	cpi	r24, 0x80	; 128
 8a6:	bf e3       	ldi	r27, 0x3F	; 63
 8a8:	9b 07       	cpc	r25, r27
 8aa:	49 f1       	breq	.+82     	; 0x8fe <pow+0x6e>
 8ac:	68 94       	set
 8ae:	90 38       	cpi	r25, 0x80	; 128
 8b0:	81 05       	cpc	r24, r1
 8b2:	61 f0       	breq	.+24     	; 0x8cc <pow+0x3c>
 8b4:	80 38       	cpi	r24, 0x80	; 128
 8b6:	bf ef       	ldi	r27, 0xFF	; 255
 8b8:	9b 07       	cpc	r25, r27
 8ba:	41 f0       	breq	.+16     	; 0x8cc <pow+0x3c>
 8bc:	99 23       	and	r25, r25
 8be:	42 f5       	brpl	.+80     	; 0x910 <pow+0x80>
 8c0:	ff 3f       	cpi	r31, 0xFF	; 255
 8c2:	e1 05       	cpc	r30, r1
 8c4:	31 05       	cpc	r19, r1
 8c6:	21 05       	cpc	r18, r1
 8c8:	11 f1       	breq	.+68     	; 0x90e <pow+0x7e>
 8ca:	e8 94       	clt
 8cc:	08 94       	sec
 8ce:	e7 95       	ror	r30
 8d0:	d9 01       	movw	r26, r18
 8d2:	aa 23       	and	r26, r26
 8d4:	29 f4       	brne	.+10     	; 0x8e0 <pow+0x50>
 8d6:	ab 2f       	mov	r26, r27
 8d8:	be 2f       	mov	r27, r30
 8da:	f8 5f       	subi	r31, 0xF8	; 248
 8dc:	d0 f3       	brcs	.-12     	; 0x8d2 <pow+0x42>
 8de:	10 c0       	rjmp	.+32     	; 0x900 <pow+0x70>
 8e0:	ff 5f       	subi	r31, 0xFF	; 255
 8e2:	70 f4       	brcc	.+28     	; 0x900 <pow+0x70>
 8e4:	a6 95       	lsr	r26
 8e6:	e0 f7       	brcc	.-8      	; 0x8e0 <pow+0x50>
 8e8:	f7 39       	cpi	r31, 0x97	; 151
 8ea:	50 f0       	brcs	.+20     	; 0x900 <pow+0x70>
 8ec:	19 f0       	breq	.+6      	; 0x8f4 <pow+0x64>
 8ee:	ff 3a       	cpi	r31, 0xAF	; 175
 8f0:	38 f4       	brcc	.+14     	; 0x900 <pow+0x70>
 8f2:	9f 77       	andi	r25, 0x7F	; 127
 8f4:	9f 93       	push	r25
 8f6:	0c d0       	rcall	.+24     	; 0x910 <pow+0x80>
 8f8:	0f 90       	pop	r0
 8fa:	07 fc       	sbrc	r0, 7
 8fc:	90 58       	subi	r25, 0x80	; 128
 8fe:	08 95       	ret
 900:	3e f0       	brts	.+14     	; 0x910 <pow+0x80>
 902:	18 cf       	rjmp	.-464    	; 0x734 <__fp_nan>
 904:	60 e0       	ldi	r22, 0x00	; 0
 906:	70 e0       	ldi	r23, 0x00	; 0
 908:	80 e8       	ldi	r24, 0x80	; 128
 90a:	9f e3       	ldi	r25, 0x3F	; 63
 90c:	08 95       	ret
 90e:	4f e7       	ldi	r20, 0x7F	; 127
 910:	9f 77       	andi	r25, 0x7F	; 127
 912:	5f 93       	push	r21
 914:	4f 93       	push	r20
 916:	3f 93       	push	r19
 918:	2f 93       	push	r18
 91a:	9e d0       	rcall	.+316    	; 0xa58 <log>
 91c:	2f 91       	pop	r18
 91e:	3f 91       	pop	r19
 920:	4f 91       	pop	r20
 922:	5f 91       	pop	r21
 924:	52 df       	rcall	.-348    	; 0x7ca <__mulsf3>
 926:	05 c0       	rjmp	.+10     	; 0x932 <exp>
 928:	19 f4       	brne	.+6      	; 0x930 <pow+0xa0>
 92a:	0e f0       	brts	.+2      	; 0x92e <pow+0x9e>
 92c:	fd ce       	rjmp	.-518    	; 0x728 <__fp_inf>
 92e:	46 cf       	rjmp	.-372    	; 0x7bc <__fp_zero>
 930:	01 cf       	rjmp	.-510    	; 0x734 <__fp_nan>

00000932 <exp>:
 932:	2a df       	rcall	.-428    	; 0x788 <__fp_splitA>
 934:	c8 f3       	brcs	.-14     	; 0x928 <pow+0x98>
 936:	96 38       	cpi	r25, 0x86	; 134
 938:	c0 f7       	brcc	.-16     	; 0x92a <pow+0x9a>
 93a:	07 f8       	bld	r0, 7
 93c:	0f 92       	push	r0
 93e:	e8 94       	clt
 940:	2b e3       	ldi	r18, 0x3B	; 59
 942:	3a ea       	ldi	r19, 0xAA	; 170
 944:	48 eb       	ldi	r20, 0xB8	; 184
 946:	5f e7       	ldi	r21, 0x7F	; 127
 948:	4e df       	rcall	.-356    	; 0x7e6 <__mulsf3_pse>
 94a:	0f 92       	push	r0
 94c:	0f 92       	push	r0
 94e:	0f 92       	push	r0
 950:	4d b7       	in	r20, 0x3d	; 61
 952:	5e b7       	in	r21, 0x3e	; 62
 954:	0f 92       	push	r0
 956:	c0 d0       	rcall	.+384    	; 0xad8 <modf>
 958:	e4 ee       	ldi	r30, 0xE4	; 228
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	16 d0       	rcall	.+44     	; 0x98a <__fp_powser>
 95e:	4f 91       	pop	r20
 960:	5f 91       	pop	r21
 962:	ef 91       	pop	r30
 964:	ff 91       	pop	r31
 966:	e5 95       	asr	r30
 968:	ee 1f       	adc	r30, r30
 96a:	ff 1f       	adc	r31, r31
 96c:	49 f0       	breq	.+18     	; 0x980 <exp+0x4e>
 96e:	fe 57       	subi	r31, 0x7E	; 126
 970:	e0 68       	ori	r30, 0x80	; 128
 972:	44 27       	eor	r20, r20
 974:	ee 0f       	add	r30, r30
 976:	44 1f       	adc	r20, r20
 978:	fa 95       	dec	r31
 97a:	e1 f7       	brne	.-8      	; 0x974 <exp+0x42>
 97c:	41 95       	neg	r20
 97e:	55 0b       	sbc	r21, r21
 980:	32 d0       	rcall	.+100    	; 0x9e6 <ldexp>
 982:	0f 90       	pop	r0
 984:	07 fe       	sbrs	r0, 7
 986:	26 c0       	rjmp	.+76     	; 0x9d4 <inverse>
 988:	08 95       	ret

0000098a <__fp_powser>:
 98a:	df 93       	push	r29
 98c:	cf 93       	push	r28
 98e:	1f 93       	push	r17
 990:	0f 93       	push	r16
 992:	ff 92       	push	r15
 994:	ef 92       	push	r14
 996:	df 92       	push	r13
 998:	7b 01       	movw	r14, r22
 99a:	8c 01       	movw	r16, r24
 99c:	68 94       	set
 99e:	05 c0       	rjmp	.+10     	; 0x9aa <__fp_powser+0x20>
 9a0:	da 2e       	mov	r13, r26
 9a2:	ef 01       	movw	r28, r30
 9a4:	1e df       	rcall	.-452    	; 0x7e2 <__mulsf3x>
 9a6:	fe 01       	movw	r30, r28
 9a8:	e8 94       	clt
 9aa:	a5 91       	lpm	r26, Z+
 9ac:	25 91       	lpm	r18, Z+
 9ae:	35 91       	lpm	r19, Z+
 9b0:	45 91       	lpm	r20, Z+
 9b2:	55 91       	lpm	r21, Z+
 9b4:	ae f3       	brts	.-22     	; 0x9a0 <__fp_powser+0x16>
 9b6:	ef 01       	movw	r28, r30
 9b8:	93 dd       	rcall	.-1242   	; 0x4e0 <__addsf3x>
 9ba:	fe 01       	movw	r30, r28
 9bc:	97 01       	movw	r18, r14
 9be:	a8 01       	movw	r20, r16
 9c0:	da 94       	dec	r13
 9c2:	79 f7       	brne	.-34     	; 0x9a2 <__fp_powser+0x18>
 9c4:	df 90       	pop	r13
 9c6:	ef 90       	pop	r14
 9c8:	ff 90       	pop	r15
 9ca:	0f 91       	pop	r16
 9cc:	1f 91       	pop	r17
 9ce:	cf 91       	pop	r28
 9d0:	df 91       	pop	r29
 9d2:	08 95       	ret

000009d4 <inverse>:
 9d4:	9b 01       	movw	r18, r22
 9d6:	ac 01       	movw	r20, r24
 9d8:	60 e0       	ldi	r22, 0x00	; 0
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	80 e8       	ldi	r24, 0x80	; 128
 9de:	9f e3       	ldi	r25, 0x3F	; 63
 9e0:	d2 cd       	rjmp	.-1116   	; 0x586 <__divsf3>
 9e2:	a2 ce       	rjmp	.-700    	; 0x728 <__fp_inf>
 9e4:	ac c0       	rjmp	.+344    	; 0xb3e <__fp_mpack>

000009e6 <ldexp>:
 9e6:	d0 de       	rcall	.-608    	; 0x788 <__fp_splitA>
 9e8:	e8 f3       	brcs	.-6      	; 0x9e4 <inverse+0x10>
 9ea:	99 23       	and	r25, r25
 9ec:	d9 f3       	breq	.-10     	; 0x9e4 <inverse+0x10>
 9ee:	94 0f       	add	r25, r20
 9f0:	51 1d       	adc	r21, r1
 9f2:	bb f3       	brvs	.-18     	; 0x9e2 <inverse+0xe>
 9f4:	91 50       	subi	r25, 0x01	; 1
 9f6:	50 40       	sbci	r21, 0x00	; 0
 9f8:	94 f0       	brlt	.+36     	; 0xa1e <ldexp+0x38>
 9fa:	59 f0       	breq	.+22     	; 0xa12 <ldexp+0x2c>
 9fc:	88 23       	and	r24, r24
 9fe:	32 f0       	brmi	.+12     	; 0xa0c <ldexp+0x26>
 a00:	66 0f       	add	r22, r22
 a02:	77 1f       	adc	r23, r23
 a04:	88 1f       	adc	r24, r24
 a06:	91 50       	subi	r25, 0x01	; 1
 a08:	50 40       	sbci	r21, 0x00	; 0
 a0a:	c1 f7       	brne	.-16     	; 0x9fc <ldexp+0x16>
 a0c:	9e 3f       	cpi	r25, 0xFE	; 254
 a0e:	51 05       	cpc	r21, r1
 a10:	44 f7       	brge	.-48     	; 0x9e2 <inverse+0xe>
 a12:	88 0f       	add	r24, r24
 a14:	91 1d       	adc	r25, r1
 a16:	96 95       	lsr	r25
 a18:	87 95       	ror	r24
 a1a:	97 f9       	bld	r25, 7
 a1c:	08 95       	ret
 a1e:	5f 3f       	cpi	r21, 0xFF	; 255
 a20:	ac f0       	brlt	.+42     	; 0xa4c <ldexp+0x66>
 a22:	98 3e       	cpi	r25, 0xE8	; 232
 a24:	9c f0       	brlt	.+38     	; 0xa4c <ldexp+0x66>
 a26:	bb 27       	eor	r27, r27
 a28:	86 95       	lsr	r24
 a2a:	77 95       	ror	r23
 a2c:	67 95       	ror	r22
 a2e:	b7 95       	ror	r27
 a30:	08 f4       	brcc	.+2      	; 0xa34 <ldexp+0x4e>
 a32:	b1 60       	ori	r27, 0x01	; 1
 a34:	93 95       	inc	r25
 a36:	c1 f7       	brne	.-16     	; 0xa28 <ldexp+0x42>
 a38:	bb 0f       	add	r27, r27
 a3a:	58 f7       	brcc	.-42     	; 0xa12 <ldexp+0x2c>
 a3c:	11 f4       	brne	.+4      	; 0xa42 <ldexp+0x5c>
 a3e:	60 ff       	sbrs	r22, 0
 a40:	e8 cf       	rjmp	.-48     	; 0xa12 <ldexp+0x2c>
 a42:	6f 5f       	subi	r22, 0xFF	; 255
 a44:	7f 4f       	sbci	r23, 0xFF	; 255
 a46:	8f 4f       	sbci	r24, 0xFF	; 255
 a48:	9f 4f       	sbci	r25, 0xFF	; 255
 a4a:	e3 cf       	rjmp	.-58     	; 0xa12 <ldexp+0x2c>
 a4c:	b8 ce       	rjmp	.-656    	; 0x7be <__fp_szero>
 a4e:	0e f0       	brts	.+2      	; 0xa52 <ldexp+0x6c>
 a50:	76 c0       	rjmp	.+236    	; 0xb3e <__fp_mpack>
 a52:	70 ce       	rjmp	.-800    	; 0x734 <__fp_nan>
 a54:	68 94       	set
 a56:	68 ce       	rjmp	.-816    	; 0x728 <__fp_inf>

00000a58 <log>:
 a58:	97 de       	rcall	.-722    	; 0x788 <__fp_splitA>
 a5a:	c8 f3       	brcs	.-14     	; 0xa4e <ldexp+0x68>
 a5c:	99 23       	and	r25, r25
 a5e:	d1 f3       	breq	.-12     	; 0xa54 <ldexp+0x6e>
 a60:	c6 f3       	brts	.-16     	; 0xa52 <ldexp+0x6c>
 a62:	df 93       	push	r29
 a64:	cf 93       	push	r28
 a66:	1f 93       	push	r17
 a68:	0f 93       	push	r16
 a6a:	ff 92       	push	r15
 a6c:	c9 2f       	mov	r28, r25
 a6e:	dd 27       	eor	r29, r29
 a70:	88 23       	and	r24, r24
 a72:	2a f0       	brmi	.+10     	; 0xa7e <log+0x26>
 a74:	21 97       	sbiw	r28, 0x01	; 1
 a76:	66 0f       	add	r22, r22
 a78:	77 1f       	adc	r23, r23
 a7a:	88 1f       	adc	r24, r24
 a7c:	da f7       	brpl	.-10     	; 0xa74 <log+0x1c>
 a7e:	20 e0       	ldi	r18, 0x00	; 0
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	40 e8       	ldi	r20, 0x80	; 128
 a84:	5f eb       	ldi	r21, 0xBF	; 191
 a86:	9f e3       	ldi	r25, 0x3F	; 63
 a88:	88 39       	cpi	r24, 0x98	; 152
 a8a:	20 f0       	brcs	.+8      	; 0xa94 <log+0x3c>
 a8c:	80 3e       	cpi	r24, 0xE0	; 224
 a8e:	30 f0       	brcs	.+12     	; 0xa9c <log+0x44>
 a90:	21 96       	adiw	r28, 0x01	; 1
 a92:	8f 77       	andi	r24, 0x7F	; 127
 a94:	14 dd       	rcall	.-1496   	; 0x4be <__addsf3>
 a96:	ec e0       	ldi	r30, 0x0C	; 12
 a98:	f1 e0       	ldi	r31, 0x01	; 1
 a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <log+0x4a>
 a9c:	10 dd       	rcall	.-1504   	; 0x4be <__addsf3>
 a9e:	e9 e3       	ldi	r30, 0x39	; 57
 aa0:	f1 e0       	ldi	r31, 0x01	; 1
 aa2:	73 df       	rcall	.-282    	; 0x98a <__fp_powser>
 aa4:	8b 01       	movw	r16, r22
 aa6:	be 01       	movw	r22, r28
 aa8:	ec 01       	movw	r28, r24
 aaa:	fb 2e       	mov	r15, r27
 aac:	6f 57       	subi	r22, 0x7F	; 127
 aae:	71 09       	sbc	r23, r1
 ab0:	75 95       	asr	r23
 ab2:	77 1f       	adc	r23, r23
 ab4:	88 0b       	sbc	r24, r24
 ab6:	99 0b       	sbc	r25, r25
 ab8:	fc dd       	rcall	.-1032   	; 0x6b2 <__floatsisf>
 aba:	28 e1       	ldi	r18, 0x18	; 24
 abc:	32 e7       	ldi	r19, 0x72	; 114
 abe:	41 e3       	ldi	r20, 0x31	; 49
 ac0:	5f e3       	ldi	r21, 0x3F	; 63
 ac2:	8f de       	rcall	.-738    	; 0x7e2 <__mulsf3x>
 ac4:	af 2d       	mov	r26, r15
 ac6:	98 01       	movw	r18, r16
 ac8:	ae 01       	movw	r20, r28
 aca:	ff 90       	pop	r15
 acc:	0f 91       	pop	r16
 ace:	1f 91       	pop	r17
 ad0:	cf 91       	pop	r28
 ad2:	df 91       	pop	r29
 ad4:	05 dd       	rcall	.-1526   	; 0x4e0 <__addsf3x>
 ad6:	3f ce       	rjmp	.-898    	; 0x756 <__fp_round>

00000ad8 <modf>:
 ad8:	fa 01       	movw	r30, r20
 ada:	dc 01       	movw	r26, r24
 adc:	aa 0f       	add	r26, r26
 ade:	bb 1f       	adc	r27, r27
 ae0:	9b 01       	movw	r18, r22
 ae2:	ac 01       	movw	r20, r24
 ae4:	bf 57       	subi	r27, 0x7F	; 127
 ae6:	28 f4       	brcc	.+10     	; 0xaf2 <modf+0x1a>
 ae8:	22 27       	eor	r18, r18
 aea:	33 27       	eor	r19, r19
 aec:	44 27       	eor	r20, r20
 aee:	50 78       	andi	r21, 0x80	; 128
 af0:	1f c0       	rjmp	.+62     	; 0xb30 <modf+0x58>
 af2:	b7 51       	subi	r27, 0x17	; 23
 af4:	88 f4       	brcc	.+34     	; 0xb18 <modf+0x40>
 af6:	ab 2f       	mov	r26, r27
 af8:	00 24       	eor	r0, r0
 afa:	46 95       	lsr	r20
 afc:	37 95       	ror	r19
 afe:	27 95       	ror	r18
 b00:	01 1c       	adc	r0, r1
 b02:	a3 95       	inc	r26
 b04:	d2 f3       	brmi	.-12     	; 0xafa <modf+0x22>
 b06:	00 20       	and	r0, r0
 b08:	69 f0       	breq	.+26     	; 0xb24 <modf+0x4c>
 b0a:	22 0f       	add	r18, r18
 b0c:	33 1f       	adc	r19, r19
 b0e:	44 1f       	adc	r20, r20
 b10:	b3 95       	inc	r27
 b12:	da f3       	brmi	.-10     	; 0xb0a <modf+0x32>
 b14:	0d d0       	rcall	.+26     	; 0xb30 <modf+0x58>
 b16:	d2 cc       	rjmp	.-1628   	; 0x4bc <__subsf3>
 b18:	61 30       	cpi	r22, 0x01	; 1
 b1a:	71 05       	cpc	r23, r1
 b1c:	a0 e8       	ldi	r26, 0x80	; 128
 b1e:	8a 07       	cpc	r24, r26
 b20:	b9 46       	sbci	r27, 0x69	; 105
 b22:	30 f4       	brcc	.+12     	; 0xb30 <modf+0x58>
 b24:	9b 01       	movw	r18, r22
 b26:	ac 01       	movw	r20, r24
 b28:	66 27       	eor	r22, r22
 b2a:	77 27       	eor	r23, r23
 b2c:	88 27       	eor	r24, r24
 b2e:	90 78       	andi	r25, 0x80	; 128
 b30:	30 96       	adiw	r30, 0x00	; 0
 b32:	21 f0       	breq	.+8      	; 0xb3c <modf+0x64>
 b34:	20 83       	st	Z, r18
 b36:	31 83       	std	Z+1, r19	; 0x01
 b38:	42 83       	std	Z+2, r20	; 0x02
 b3a:	53 83       	std	Z+3, r21	; 0x03
 b3c:	08 95       	ret

00000b3e <__fp_mpack>:
 b3e:	9f 3f       	cpi	r25, 0xFF	; 255
 b40:	31 f0       	breq	.+12     	; 0xb4e <__fp_mpack_finite+0xc>

00000b42 <__fp_mpack_finite>:
 b42:	91 50       	subi	r25, 0x01	; 1
 b44:	20 f4       	brcc	.+8      	; 0xb4e <__fp_mpack_finite+0xc>
 b46:	87 95       	ror	r24
 b48:	77 95       	ror	r23
 b4a:	67 95       	ror	r22
 b4c:	b7 95       	ror	r27
 b4e:	88 0f       	add	r24, r24
 b50:	91 1d       	adc	r25, r1
 b52:	96 95       	lsr	r25
 b54:	87 95       	ror	r24
 b56:	97 f9       	bld	r25, 7
 b58:	08 95       	ret

00000b5a <__umulhisi3>:
 b5a:	a2 9f       	mul	r26, r18
 b5c:	b0 01       	movw	r22, r0
 b5e:	b3 9f       	mul	r27, r19
 b60:	c0 01       	movw	r24, r0
 b62:	a3 9f       	mul	r26, r19
 b64:	70 0d       	add	r23, r0
 b66:	81 1d       	adc	r24, r1
 b68:	11 24       	eor	r1, r1
 b6a:	91 1d       	adc	r25, r1
 b6c:	b2 9f       	mul	r27, r18
 b6e:	70 0d       	add	r23, r0
 b70:	81 1d       	adc	r24, r1
 b72:	11 24       	eor	r1, r1
 b74:	91 1d       	adc	r25, r1
 b76:	08 95       	ret

00000b78 <_exit>:
 b78:	f8 94       	cli

00000b7a <__stop_program>:
 b7a:	ff cf       	rjmp	.-2      	; 0xb7a <__stop_program>
